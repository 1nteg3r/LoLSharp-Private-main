local menu = menu("intnnerkatarinarework", "Intnner - Katarina")

menu:set('icon', player.iconCircle)
--core
menu:header("core", "Core - Katarina")
menu:menu("keys", "KeyBind - Settings")
menu.keys:keybind("toggleSafe", "Safe Position", false, "A")
menu.keys:keybind("toggleFarm", "Toogle Farming", false, "G")
menu.keys:boolean("toogledraw", "Draw Toogles", true)
menu:dropdown("combomode", "Select combo style: ", 2, {"Q > E", "E > Q", "E > W > R > Q", "Q > Dagger"})
--combo 
menu:menu('combo', "Combo - Settings")
    menu.combo:header("xd", "Bouncing Blade - Q")
        menu.combo:boolean('combo.q', 'Use Q in combo', true)
        menu.combo:boolean('mode.q', 'Prioritize Dagger', true)
        menu.combo['mode.q']:set("tooltip", "Only Level 2 - if Q and E is Ready")
    menu.combo:header("x2d", "Preparation - W")
        menu.combo:boolean('combo.w', 'Use W in combo', true)
        menu.combo:boolean('gab.w', '^~ Gabcloser', true)
    menu.combo:header("x3d", "Shunpo - E")
        menu.combo:boolean('combo.e', 'Use E in combo', true)
        menu.combo:boolean('saved', '^~ Save E in Daggers', false)
        menu.combo:boolean('resetE', '^~ Reset E', true)
    menu.combo:header("x4d", "Death Lotus - R")
    menu.combo:menu('rset', 'R - R Settings')
        menu.combo.rset:dropdown("rmod", "R Usage: ", 2, {"Always", "Killable", "Never"})
        menu.combo.rset:slider("dagger", "R Daggers for Damage Check", 8, 1, 16, 1)
        menu.combo.rset:slider("rhit", "R Only if Hits X Enemies", 1, 1, 5, 1)
        menu.combo.rset:boolean("cancelr", "Cancel R if no Enemies", true)
        menu.combo.rset:boolean("cancelrks", "Cancel R for Killsteal", true)
        menu.combo.rset:boolean("followup", "Follow up enemy if running of R range", false)
        menu.combo.rset:slider("notUse", "Don't waste R if Enemy Health <= ", 15, 5, 100, 5)
    menu.combo:header("x4sd", "Others - Settings")
        menu.combo:boolean("items", "Use Items", true)

    menu:menu('harass', 'Harass/Hybrid - Settings')
    menu.harass:header("xd", "Bouncing Blade - Q")
        menu.harass:boolean('harass.q', 'Use Q', true)
    menu.harass:header("x2d", "Preparation - W")
        menu.harass:boolean('harass.w', 'Use W ', false)
    menu.harass:header("x3d", "Shunpo - E")
        menu.harass:boolean('harass.e', 'Use E', true)
        menu.harass:boolean('saved', '^~ Only in Daggers', true)

    menu:menu('wave', 'Wave/Jungle - Settings')
    menu.wave:boolean('wave.q', 'Use Q', true)
    menu.wave:boolean('lastHit', '^~ Q only Last-hit', true)
    menu.wave:boolean('wave.w', 'Use W', true)
    menu.wave:slider("minion", "Min. Minion Range >= {0}", 3, 1, 10, 1)
    menu.wave:boolean('wave.e', 'Use E', false)
    menu.wave:slider("rhit", "Min. Minion in Range Dagger >= {0}", 5, 1, 13, 1)
    menu.wave:header("ad", "Others")
        menu.wave:boolean('outRange', 'Use Q only out range AA', true)
        menu.wave:slider("enemyRange", "Min. Enemies in Range <=", 1, 1, 5, 1)
        menu.wave:slider("minHealth", "Min. Health for LaneClear", 25, 5, 100, 5)

    menu:menu('misc', 'Miscellaneous - Settings')
        menu.misc:header("aahahd", "Magnet to Daggers")
        menu.misc:boolean('magnet', 'Magnet-Dagger', false)
        menu.misc:dropdown("catch", "Move when: ", 2, {"Combo", "Always"})
        menu.misc:header("xdxd", "Others - Settings")
        menu.misc:boolean("ksq", "Killsteal with Q", true)
        menu.misc:boolean("kse", "Killsteal with E", true)
        menu.misc:boolean("ksedagger", "^~ Killsteal with E Dagger", true)
        menu.misc:boolean("ksegap", "Killsteal with E Gapclose for Q", true)
        menu.misc:header("ad", "Others - Settings")
        menu.misc:boolean('eturret', 'Use E in a Safe Position', true)
            menu.misc['eturret']:set("tooltip", "This avoids putting it under the enemy tower or in dangerous places")
        menu.misc:header("ecvade", "Evade")
            menu.misc:boolean("disableEvade", "Disable Evade in combo", true)
    menu:menu('flee', 'Flee - Settings')
    menu.flee:keybind("fleekey", "Flee Key", "Z", nil)
    menu.flee:boolean("E.Use", "Use E for flee", true)
    menu.flee:boolean("E.Monster", "E to Monster / Minion Enmey", true)
    menu.flee:boolean("E.Minion", "E to Minion", true)
    menu.flee:boolean("E.Dagger", "E to Dagger", true)
    menu.flee:boolean("E.Champ", "E to Champion", true)
    menu.flee:header("ad", "Others - Settings")
    menu.flee:slider("minHealth", "Min {0}% HP for E champ & monster", 15, 5, 100, 5)
    menu.flee:slider("CursorRange", "Jump to cursor target detect range.", 100, 1, 200, 1);

--Draws
menu:menu("draws", "Drawings - Settings")
menu.draws:header("spells", "Spells - Drawings")
menu.draws:boolean("qrange", "Draw Q Range", true)
menu.draws:boolean("wrange", "Draw W Range", false)
menu.draws:boolean("erange", "Draw E Range", true)
menu.draws:boolean("rrange", "Draw R Range", true)
menu.draws:header("dagger", "Dagger - Drawings")
menu.draws:boolean("daggerCircle", "Draw Circle Range", true)
menu.draws:boolean("daggerTime", "Draw Time", true)
menu.draws:slider("widthDagger", "^~ Width Text", 20, 1, 35, 1)
menu.draws:header("colors", "Color - Settings")
menu.draws:color("qcolor", "Q - Drawing Color", 255, 255, 255, 255)
menu.draws:color("wcolor", "W - Drawing Color", 255, 255, 255, 255)
menu.draws:color("ecolor", "E - Drawing Color", 255, 255, 255, 255)
menu.draws:color("rcolor", "R - Drawing Color", 255, 255, 255, 255)
menu.draws:header("orther", "Orther - Settings")
menu.draws:slider("points_n", "Draw points", 40, 1, 100, 1)
menu.draws['points_n']:set("tooltip", "Helps improve FPS")
menu.draws:slider("widthLine", "Width Circle", 2, 1, 5, 1)
return {
    menu = menu, 
}