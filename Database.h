#pragma once
std::unordered_map<uint64_t, structspell> SpellDatabase;
std::unordered_map<uint64_t, struct_slotspell> EvadeSpells;
std::unordered_map<std::string, SpellInfo*> GameSpells = {};

std::vector<fnv::hash> dragonParticles = { FNV("SRU_Dragon_Spawn_Praxis.troy"), FNV("SRU_Dragon_idle1_landing_sound.troy") };
std::vector<fnv::hash> baronParticles = { FNV("SRU_Baron_Base_BA1_tar.troy"), FNV("SRU_Baron_Base_Attack_Mouth.troy") };

std::vector<fnv::hash> dragonAttacking = { FNV("SRU_Dragon_Spawn_Praxis.troy") };
std::vector<fnv::hash> dragonidle = { FNV("SRU_Dragon_idle1_landing_sound.troy") };
std::vector<fnv::hash> dragonDeath = { FNV("SRU_Dragon_death_sound.troy") };

std::vector<fnv::hash> baronAttacking = { FNV("SRU_Baron_Base_BA1_tar.troy") };
std::vector<fnv::hash> baronDeath = { FNV("SRU_Baron_death_sound.troy") };

std::unordered_map<uint64_t, int> priorities = {
	{FNV("Aatrox"),3},
	{FNV("Ahri"),4},
	{FNV("Akali"),4},
	{FNV("Akshan"),5},
	{FNV("Alistar"),1},
	{FNV("Amumu"),1},
	{FNV("Anivia"),4},
	{FNV("Annie"),4},
	{FNV("Aphelios"),5},
	{FNV("Ashe"),5},
	{FNV("AurelionSol"),4},
	{FNV("Azir"),4},
	{FNV("Bard"),3},
	{FNV("Blitzcrank"),1},
	{FNV("Brand"),4},
	{FNV("Braum"),1},
	{FNV("Caitlyn"),5},
	{FNV("Camille"),3},
	{FNV("Cassiopeia"),4},
	{FNV("ChoGath"),1},
	{FNV("Corki"),5},
	{FNV("Darius"),2},
	{FNV("Diana"),4},
	{FNV("DrMundo"),1},
	{FNV("Draven"),5},
	{FNV("Ekko"),4},
	{FNV("Elise"),3},
	{FNV("Evelynn"),4},
	{FNV("Ezreal"),5},
	{FNV("Graves"),4},
	{FNV("Gwen"),3},
	{FNV("Jinx"),5},
	{FNV("Kalista"),5},
	{FNV("Kaisa"),5},
	{FNV("Karma"),4},
	{FNV("Karthus"),4},
	{FNV("Katarina"),4},
	{FNV("Kennen"),4},
	{FNV("KogMaw"),5},
	{FNV("Kindred"),4},
	{FNV("Leblanc"),4},
	{FNV("Lucian"),5},
	{FNV("Lux"),4},
	{FNV("Malzahar"),3},
	{FNV("MasterYi"),5},
	{FNV("MissFortune"),5},
	{FNV("Neeko"),4},
	{FNV("Orianna"),4},
	{FNV("Quinn"),5},
	{FNV("Sivir"),5},
	{FNV("Sylas"),4},
	{FNV("Syndra"),4},
	{FNV("Talon"),4},
	{FNV("Teemo"),4},
	{FNV("Tristana"),5},
	{FNV("TwistedFate"),4},
	{FNV("Twitch"),5},
	{FNV("Varus"),5},
	{FNV("Vayne"),5},
	{FNV("Veigar"),4},
	{FNV("Velkoz"),4},
	{FNV("Viktor"),4},
	{FNV("Xerath"),4},
	{FNV("Zed"),4},
	{FNV("Ziggs"),4},
	{FNV("Jhin"),5},
	{FNV("Soraka"),3},
	{FNV("Taliyah"),4},
	{FNV("Qiyana"),4},
	{FNV("Zoe"),4},
	{FNV("Xayah"),5},
	{FNV("Samira"),5},
	{FNV("Fiddlesticks"),3},
	{FNV("Fiora"),3},
	{FNV("Fizz"),4},
	{FNV("Heimerdinger"),3},
	{FNV("Jayce"),4},
	{FNV("Kassadin"),4},
	{FNV("Kayle"),4},
	{FNV("KhaZix"),4},
	{FNV("Lissandra"),4},
	{FNV("Mordekaiser"),4},
	{FNV("Nidalee"),4},
	{FNV("Riven"),4},
	{FNV("Senna"),5},
	{FNV("Shaco"),4},
	{FNV("Vladimir"),3},
	{FNV("Yasuo"),4},
	{FNV("Zilean"),3},
	{FNV("Kayn"),4},
	{FNV("Yone"),4},
	{FNV("Galio"),1},
	{FNV("Gangplank"),4},
	{FNV("Gragas"),2},
	{FNV("Irelia"),3},
	{FNV("Jax"),3},
	{FNV("LeeSin"),3},
	{FNV("Maokai"),2},
	{FNV("Morgana"),3},
	{FNV("Nocturne"),4},
	{FNV("Pantheon"),3},
	{FNV("Poppy"),2},
	{FNV("Pyke"),4},
	{FNV("Rengar"),4},
	{FNV("Rumble"),4},
	{FNV("Ryze"),4},
	{FNV("Sett"),2},
	{FNV("Swain"),3},
	{FNV("Trundle"),2},
	{FNV("Tryndamere"),4},
	{FNV("Udyr"),2},
	{FNV("Urgot"),2},
	{FNV("Vi"),2},
	{FNV("XinZhao"),3},
	{FNV("RekSai"),2},
	{FNV("Renata"),3},
	{FNV("Viego"),4 },
	{FNV("Illaoi"),3},
	{FNV("Kled"),2},
	{FNV("Lillia"),3},
	{FNV("Garen"),1},
	{FNV("Gnar"),1},
	{FNV("Hecarim"),2},
	{FNV("Janna"),2},
	{FNV("JarvanIV"),3},
	{FNV("Leona"),1},
	{FNV("Lulu"),3},
	{FNV("Malphite"),1},
	{FNV("Nami"),3},
	{FNV("Nasus"),2},
	{FNV("Nautilus"),1},
	{FNV("Nunu"),2},
	{FNV("Olaf"),2},
	{FNV("Rammus"),1},
	{FNV("Renekton"),2},
	{FNV("Sejuani"),2},
	{FNV("Shen"),1},
	{FNV("Shyvana"),2},
	{FNV("Singed"),1},
	{FNV("Sion"),1},
	{FNV("Skarner"),2},
	{FNV("Sona"),3},
	{FNV("Taric"),1},
	{FNV("TahmKench"),1},
	{FNV("Thresh"),1},
	{FNV("Volibear"),2},
	{FNV("Warwick"),2},
	{FNV("MonkeyKing"),3},
	{FNV("Yorick"),2},
	{FNV("Yuumi"),3},
	{FNV("Zac"),1},
	{FNV("Zyra"),2},
	{FNV("Ornn"),2},
	{FNV("Rakan"),3},
	{FNV("Ivern"),1},
	{FNV("Rell"),3},
	{FNV("Vex"),4 },
	{FNV("Zeri"),5 },
	{FNV("belveth"),5 },
};

std::unordered_map<uint64_t, std::unordered_map<std::string, structspell>> SpellDatabaseTest;

//std::unordered_map<std::string, SpellInfo*> EvadeSpells = {};

const char* const blackListSpells[] = {
				"Minion",
				"minion",
				"BasicAttack",
				"Recall",
				"Potion",
				"Aery",
				"Cometv",
				"Arcane",
				"Dragon",
				"Baron",
				"PlantHealthTracer",
				"RivenMartyr"
};

const char* const WhiteListSpells[] = { // STD::unordered_set ? 
	"ViktorDeathRayMissile",
	"ViktorEAugMissile",
	"ZedQ",
	"SyndraESphereMissile",
	"XerathLocusPulse",
	"SyndraQSpell",
	"ZiggsQSpell",
	"OrianaIzuna",
	"OrianaDetonateCommand",
	"VelkozQMissileSplit",
	"VarusQMissile",
	"JhinRShot",
	"ZoeQMis2",
	"TaliyahQMis",
	"LucianRMissileOffhand",
	"JayceShockBlastWallMis",
	/*"YasuoQ3Mis",*/
	"HowlingGaleSpell",
	"ThreshQMissile",
	"LilliaERollingMissile",
	"ViegoW"
};
fnv::hash const blackListSpellsActive[] = {
						FNV("NOPE"),
						FNV("RivenMartyr"),
						FNV("ZedQ"),
						FNV("ViegoW"),
};

void SpellEvadeInit()
{
	//std::string name;
	//float range;
	//int danger;
	//int slot;


	EvadeSpells[FNV("Ahri")] = { 450.f,4,_R };
	EvadeSpells[FNV("Corki")] = { 600.f,4,_W };
	EvadeSpells[FNV("Ekko")] = { 325.f,2,_E };
	EvadeSpells[FNV("Ezreal")] = { 475.f,3,_E };
	EvadeSpells[FNV("Fiora")] = { 400,1,_Q };
	EvadeSpells[FNV("Fizz")] = { 0,3,_E };
	EvadeSpells[FNV("Gnar")] = { 475,3,_E };
	EvadeSpells[FNV("Gragas")] = { 600,3,_E };
	EvadeSpells[FNV("Graves")] = { 425,1,_E };
	EvadeSpells[FNV("Kassadin")] = { 500,3,_R };
	EvadeSpells[FNV("Kayn")] = { 425,2,_Q };
	EvadeSpells[FNV("Khazix")] = { 700,3,_E };
	EvadeSpells[FNV("Kindred")] = { 340,1,_Q };
	EvadeSpells[FNV("Kled")] = { 550,3,_E };
	EvadeSpells[FNV("Leblanc")] = { 600,3,_W };
	EvadeSpells[FNV("Lucian")] = { 425,3,_E };
	EvadeSpells[FNV("MasterYi")] = { 600,3,_Q };
	EvadeSpells[FNV("Pyke")] = { 550,3,_E };
	EvadeSpells[FNV("Rakan")] = { 600,3,_W };
	EvadeSpells[FNV("Renekton")] = { 450,3,_E };
	EvadeSpells[FNV("Riven")] = { 325,2,_E };
	EvadeSpells[FNV("Sejuani")] = { 0,3,_Q };
	EvadeSpells[FNV("Shaco")] = { 400,3,_Q };
	EvadeSpells[FNV("Shen")] = { 600,4,_E };
	EvadeSpells[FNV("Tryndamere")] = { 660,3,_E };
	EvadeSpells[FNV("Vayne")] = { 300,2,_Q };
	EvadeSpells[FNV("Zeri")] = { 300,2,_E };
}
void SpellDBTest()
{
	SpellDatabaseTest[FNV("Lillia")][("LilliaERollingMissile")] = SpellDatabase[FNV("LilliaERollingMissile")];
	SpellDatabaseTest[FNV("Akshan")][("AkshanQ")] = SpellDatabase[FNV("AkshanQ")];
	SpellDatabaseTest[FNV("Aatrox")][("AatroxQ")] = SpellDatabase[FNV("AatroxQ")];
	SpellDatabaseTest[FNV("Aatrox")][("AatroxQ2")] = SpellDatabase[FNV("AatroxQ2")];
	SpellDatabaseTest[FNV("Aatrox")][("AatroxQ3")] = SpellDatabase[FNV("AatroxQ3")];
	SpellDatabaseTest[FNV("Aatrox")][("AatroxW")] = SpellDatabase[FNV("AatroxW")];
	SpellDatabaseTest[FNV("Ahri")][("AhriOrbofDeception")] = SpellDatabase[FNV("AhriOrbofDeception")];
	SpellDatabaseTest[FNV("Ahri")][("AhriSeduce")] = SpellDatabase[FNV("AhriSeduce")];
	SpellDatabaseTest[FNV("Akali")][("AkaliQ")] = SpellDatabase[FNV("AkaliQ")];
	SpellDatabaseTest[FNV("Akali")][("AkaliE")] = SpellDatabase[FNV("AkaliE")];
	SpellDatabaseTest[FNV("Akali")][("AkaliR")] = SpellDatabase[FNV("AkaliR")];
	SpellDatabaseTest[FNV("Akali")][("AkaliRb")] = SpellDatabase[FNV("AkaliRb")];
	SpellDatabaseTest[FNV("Alistar")][("Pulverize")] = SpellDatabase[FNV("Pulverize")];
	SpellDatabaseTest[FNV("Amumu")][("BandageToss")] = SpellDatabase[FNV("BandageToss")];
	SpellDatabaseTest[FNV("Amumu")][("CurseoftheSadMummy")] = SpellDatabase[FNV("CurseoftheSadMummy")];
	SpellDatabaseTest[FNV("Anivia")][("FlashFrostSpell")] = SpellDatabase[FNV("FlashFrostSpell")];
	SpellDatabaseTest[FNV("Annie")][("AnnieW")] = SpellDatabase[FNV("AnnieW")];
	SpellDatabaseTest[FNV("Annie")][("AnnieR")] = SpellDatabase[FNV("AnnieR")];
	SpellDatabaseTest[FNV("Aphelios")][("ApheliosCalibrumQ")] = SpellDatabase[FNV("ApheliosCalibrumQ")];
	SpellDatabaseTest[FNV("Aphelios")][("ApheliosInfernumQ")] = SpellDatabase[FNV("ApheliosInfernumQ")];
	SpellDatabaseTest[FNV("Aphelios")][("ApheliosR")] = SpellDatabase[FNV("ApheliosR")];
	SpellDatabaseTest[FNV("Ashe")][("Volley")] = SpellDatabase[FNV("Volley")];
	SpellDatabaseTest[FNV("Ashe")][("EnchantedCrystalArrow")] = SpellDatabase[FNV("EnchantedCrystalArrow")];
	SpellDatabaseTest[FNV("AurelionSol")][("AurelionSolQ")] = SpellDatabase[FNV("AurelionSolQ")];
	SpellDatabaseTest[FNV("AurelionSol")][("AurelionSolR")] = SpellDatabase[FNV("AurelionSolR")];
	SpellDatabaseTest[FNV("Azir")][("AzirR")] = SpellDatabase[FNV("AzirR")];
	SpellDatabaseTest[FNV("Bard")][("BardQ")] = SpellDatabase[FNV("BardQ")];
	SpellDatabaseTest[FNV("Bard")][("BardR")] = SpellDatabase[FNV("BardR")];
	SpellDatabaseTest[FNV("Blitzcrank")][("RocketGrab")] = SpellDatabase[FNV("RocketGrab")];
	SpellDatabaseTest[FNV("Blitzcrank")][("StaticField")] = SpellDatabase[FNV("StaticField")];
	SpellDatabaseTest[FNV("Brand")][("BrandQ")] = SpellDatabase[FNV("BrandQ")];
	SpellDatabaseTest[FNV("Brand")][("BrandW")] = SpellDatabase[FNV("BrandW")];
	SpellDatabaseTest[FNV("Braum")][("BraumQ")] = SpellDatabase[FNV("BraumQ")];
	SpellDatabaseTest[FNV("Braum")][("BraumR")] = SpellDatabase[FNV("BraumR")];
	SpellDatabaseTest[FNV("Caitlyn")][("CaitlynQ")] = SpellDatabase[FNV("CaitlynQ")];
	//SpellDatabaseTest[FNV("Caitlyn")][("CaitlynYordleTrap")] = SpellDatabase[FNV("CaitlynYordleTrap")];
	SpellDatabaseTest[FNV("Caitlyn")][("CaitlynEntrapment")] = SpellDatabase[FNV("CaitlynEntrapment")];
	SpellDatabaseTest[FNV("Camille")][("CamilleE")] = SpellDatabase[FNV("CamilleE")];
	SpellDatabaseTest[FNV("Camille")][("CamilleEDash2")] = SpellDatabase[FNV("CamilleEDash2")];
	SpellDatabaseTest[FNV("Cassiopeia")][("CassiopeiaQ")] = SpellDatabase[FNV("CassiopeiaQ")];
	SpellDatabaseTest[FNV("Cassiopeia")][("CassiopeiaW")] = SpellDatabase[FNV("CassiopeiaW")];
	SpellDatabaseTest[FNV("Cassiopeia")][("CassiopeiaR")] = SpellDatabase[FNV("CassiopeiaR")];
	SpellDatabaseTest[FNV("Chogath")][("Rupture")] = SpellDatabase[FNV("Rupture")];
	SpellDatabaseTest[FNV("Chogath")][("FeralScream")] = SpellDatabase[FNV("FeralScream")];
	SpellDatabaseTest[FNV("Corki")][("PhosphorusBomb")] = SpellDatabase[FNV("PhosphorusBomb")];
	SpellDatabaseTest[FNV("Ezreal")][("EzrealMysticShotMissile")] = SpellDatabase[FNV("EzrealMysticShotMissile")];
	SpellDatabaseTest[FNV("Corki")][("MissileBarrage")] = SpellDatabase[FNV("MissileBarrage")];
	SpellDatabaseTest[FNV("Diana")][("DianaQ")] = SpellDatabase[FNV("DianaQ")];
	SpellDatabaseTest[FNV("Draven")][("DravenDoubleShot")] = SpellDatabase[FNV("DravenDoubleShot")];
	SpellDatabaseTest[FNV("Draven")][("DravenRCast")] = SpellDatabase[FNV("DravenRCast")];
	SpellDatabaseTest[FNV("DrMundo")][("DrMundoQ")] = SpellDatabase[FNV("DrMundoQ")];
	SpellDatabaseTest[FNV("Ekko")][("EkkoQ")] = SpellDatabase[FNV("EkkoQ")];
	SpellDatabaseTest[FNV("Ekko")][("EkkoW")] = SpellDatabase[FNV("EkkoW")];
	SpellDatabaseTest[FNV("Elise")][("EliseHumanE")] = SpellDatabase[FNV("EliseHumanE")];
	SpellDatabaseTest[FNV("Evelynn")][("EvelynnQ")] = SpellDatabase[FNV("EvelynnQ")];
	SpellDatabaseTest[FNV("Evelynn")][("EvelynnR")] = SpellDatabase[FNV("EvelynnR")];
	SpellDatabaseTest[FNV("Ezreal")][("EzrealQ")] = SpellDatabase[FNV("EzrealQ")];
	SpellDatabaseTest[FNV("Ezreal")][("EzrealW")] = SpellDatabase[FNV("EzrealW")];
	SpellDatabaseTest[FNV("Ezreal")][("EzrealTrueshotBarrage")] = SpellDatabase[FNV("EzrealTrueshotBarrage")]; // EzrealR
	SpellDatabaseTest[FNV("Fiora")][("FioraW")] = SpellDatabase[FNV("FioraW")];
	SpellDatabaseTest[FNV("Fizz")][("FizzR")] = SpellDatabase[FNV("FizzR")];
	SpellDatabaseTest[FNV("Galio")][("GalioQ")] = SpellDatabase[FNV("GalioQ")];
	SpellDatabaseTest[FNV("Galio")][("GalioE")] = SpellDatabase[FNV("GalioE")];
	SpellDatabaseTest[FNV("Gnar")][("GnarQMissile")] = SpellDatabase[FNV("GnarQMissile")];
	SpellDatabaseTest[FNV("Gnar")][("GnarBigQMissile")] = SpellDatabase[FNV("GnarBigQMissile")];
	SpellDatabaseTest[FNV("Gnar")][("GnarBigW")] = SpellDatabase[FNV("GnarBigW")];
	SpellDatabaseTest[FNV("Gnar")][("GnarR")] = SpellDatabase[FNV("GnarR")];
	SpellDatabaseTest[FNV("Gragas")][("GragasQ")] = SpellDatabase[FNV("GragasQ")];
	SpellDatabaseTest[FNV("Gragas")][("GragasR")] = SpellDatabase[FNV("GragasR")];
	SpellDatabaseTest[FNV("Graves")][("GravesQLineSpell")] = SpellDatabase[FNV("GravesQLineSpell")];
	SpellDatabaseTest[FNV("Graves")][("GravesSmokeGrenade")] = SpellDatabase[FNV("GravesSmokeGrenade")];
	SpellDatabaseTest[FNV("Graves")][("GravesChargeShot")] = SpellDatabase[FNV("GravesChargeShot")];
	SpellDatabaseTest[FNV("Hecarim")][("HecarimUlt")] = SpellDatabase[FNV("HecarimUlt")];
	SpellDatabaseTest[FNV("Heimerdinger")][("HeimerdingerW")] = SpellDatabase[FNV("HeimerdingerW")];
	SpellDatabaseTest[FNV("Heimerdinger")][("HeimerdingerE")] = SpellDatabase[FNV("HeimerdingerE")];
	SpellDatabaseTest[FNV("Heimerdinger")][("HeimerdingerEUlt")] = SpellDatabase[FNV("HeimerdingerEUlt")];
	SpellDatabaseTest[FNV("Illaoi")][("IllaoiQ")] = SpellDatabase[FNV("IllaoiQ")];
	SpellDatabaseTest[FNV("Illaoi")][("IllaoiE")] = SpellDatabase[FNV("IllaoiE")];
	SpellDatabaseTest[FNV("Irelia")][("IreliaW2")] = SpellDatabase[FNV("IreliaW2")];
	SpellDatabaseTest[FNV("Irelia")][("IreliaEParticleMissile")] = SpellDatabase[FNV("IreliaEParticleMissile")];
	SpellDatabaseTest[FNV("Irelia")][("IreliaR")] = SpellDatabase[FNV("IreliaR")];
	SpellDatabaseTest[FNV("Ivern")][("IvernQ")] = SpellDatabase[FNV("IvernQ")];
	SpellDatabaseTest[FNV("Janna")][("HowlingGaleSpell")] = SpellDatabase[FNV("HowlingGaleSpell")];
	SpellDatabaseTest[FNV("JarvanIV")][("JarvanIVDragonStrike")] = SpellDatabase[FNV("JarvanIVDragonStrike")];
	SpellDatabaseTest[FNV("JarvanIV")][("JarvanIVDemacianStandard")] = SpellDatabase[FNV("JarvanIVDemacianStandard")];
	SpellDatabaseTest[FNV("Jayce")][("JayceShockBlast")] = SpellDatabase[FNV("JayceShockBlast")];
	SpellDatabaseTest[FNV("Jayce")][("JayceShockBlastWallMis")] = SpellDatabase[FNV("JayceShockBlastWallMis")];
	SpellDatabaseTest[FNV("Jhin")][("JhinW")] = SpellDatabase[FNV("JhinW")];
	SpellDatabaseTest[FNV("Jhin")][("JhinE")] = SpellDatabase[FNV("JhinE")];
	SpellDatabaseTest[FNV("Jhin")][("JhinRShot")] = SpellDatabase[FNV("JhinRShot")];
	SpellDatabaseTest[FNV("Jinx")][("JinxWMissile")] = SpellDatabase[FNV("JinxWMissile")];
	SpellDatabaseTest[FNV("Jinx")][("JinxEHit")] = SpellDatabase[FNV("JinxEHit")];
	SpellDatabaseTest[FNV("Jinx")][("JinxR")] = SpellDatabase[FNV("JinxR")];
	SpellDatabaseTest[FNV("Kaisa")][("KaisaW")] = SpellDatabase[FNV("KaisaW")];
	SpellDatabaseTest[FNV("Kalista")][("KalistaMysticShot")] = SpellDatabase[FNV("KalistaMysticShot")];
	SpellDatabaseTest[FNV("Karma")][("KarmaQ")] = SpellDatabase[FNV("KarmaQ")];
	SpellDatabaseTest[FNV("Karma")][("KarmaQMantra")] = SpellDatabase[FNV("KarmaQMantra")];
	SpellDatabaseTest[FNV("Karthus")][("KarthusLayWasteA1")] = SpellDatabase[FNV("KarthusLayWasteA1")];
	SpellDatabaseTest[FNV("Karthus")][("KarthusLayWasteA2")] = SpellDatabase[FNV("KarthusLayWasteA2")];
	SpellDatabaseTest[FNV("Karthus")][("KarthusLayWasteA3")] = SpellDatabase[FNV("KarthusLayWasteA3")];
	SpellDatabaseTest[FNV("Kassadin")][("ForcePulse")] = SpellDatabase[FNV("ForcePulse")];
	SpellDatabaseTest[FNV("Kassadin")][("RiftWalk")] = SpellDatabase[FNV("RiftWalk")];
	SpellDatabaseTest[FNV("Kayle")][("KayleQ")] = SpellDatabase[FNV("KayleQ")];
	SpellDatabaseTest[FNV("Kayn")][("KaynW")] = SpellDatabase[FNV("KaynW")];
	SpellDatabaseTest[FNV("Kennen")][("KennenShurikenHurlMissile1")] = SpellDatabase[FNV("KennenShurikenHurlMissile1")];
	SpellDatabaseTest[FNV("Khazix")][("KhazixW")] = SpellDatabase[FNV("KhazixW")];
	SpellDatabaseTest[FNV("Khazix")][("KhazixWLong")] = SpellDatabase[FNV("KhazixWLong")];
	SpellDatabaseTest[FNV("Kled")][("KledQ")] = SpellDatabase[FNV("KledQ")];
	SpellDatabaseTest[FNV("Kled")][("KledRiderQ")] = SpellDatabase[FNV("KledRiderQ")];
	SpellDatabaseTest[FNV("KogMaw")][("KogMawQ")] = SpellDatabase[FNV("KogMawQ")];
	SpellDatabaseTest[FNV("KogMaw")][("KogMawVoidOozeMissile")] = SpellDatabase[FNV("KogMawVoidOozeMissile")];
	SpellDatabaseTest[FNV("KogMaw")][("KogMawLivingArtillery")] = SpellDatabase[FNV("KogMawLivingArtillery")];
	SpellDatabaseTest[FNV("Leblanc")][("LeblancE")] = SpellDatabase[FNV("LeblancE")];
	SpellDatabaseTest[FNV("Leblanc")][("LeblancRE")] = SpellDatabase[FNV("LeblancRE")];
	SpellDatabaseTest[FNV("LeeSin")][("BlindMonkQOne")] = SpellDatabase[FNV("BlindMonkQOne")];
	SpellDatabaseTest[FNV("Leona")][("LeonaZenithBlade")] = SpellDatabase[FNV("LeonaZenithBlade")];
	SpellDatabaseTest[FNV("Leona")][("LeonaSolarFlare")] = SpellDatabase[FNV("LeonaSolarFlare")];
	SpellDatabaseTest[FNV("Lissandra")][("LissandraQMissile")] = SpellDatabase[FNV("LissandraQMissile")];
	SpellDatabaseTest[FNV("Lissandra")][("LissandraEMissile")] = SpellDatabase[FNV("LissandraEMissile")];
	SpellDatabaseTest[FNV("Lucian")][("LucianQ")] = SpellDatabase[FNV("LucianQ")];
	SpellDatabaseTest[FNV("Lucian")][("LucianW")] = SpellDatabase[FNV("LucianW")];
	SpellDatabaseTest[FNV("Lucian")][("LucianRMissileOffhand")] = SpellDatabase[FNV("LucianRMissileOffhand")];
	SpellDatabaseTest[FNV("Lulu")][("LuluQ")] = SpellDatabase[FNV("LuluQ")];
	SpellDatabaseTest[FNV("Lux")][("LuxLightBinding")] = SpellDatabase[FNV("LuxLightBinding")];
	SpellDatabaseTest[FNV("Lux")][("LuxLightStrikeKugel")] = SpellDatabase[FNV("LuxLightStrikeKugel")];
	SpellDatabaseTest[FNV("Lux")][("LuxMaliceCannon")] = SpellDatabase[FNV("LuxMaliceCannon")];
	SpellDatabaseTest[FNV("Malphite")][("Landslide")] = SpellDatabase[FNV("Landslide")];
	SpellDatabaseTest[FNV("Malzahar")][("MalzaharQ")] = SpellDatabase[FNV("MalzaharQ")];
	SpellDatabaseTest[FNV("Maokai")][("MaokaiQ")] = SpellDatabase[FNV("MaokaiQ")];
	//SpellDatabaseTest[FNV("MissFortune")][("MissFortuneBulletTime")] = SpellDatabase[FNV("MissFortuneBulletTime")];
	SpellDatabaseTest[FNV("Mordekaiser")][("MordekaiserQ")] = SpellDatabase[FNV("MordekaiserQ")];
	SpellDatabaseTest[FNV("Mordekaiser")][("MordekaiserE")] = SpellDatabase[FNV("MordekaiserE")];
	SpellDatabaseTest[FNV("Morgana")][("MorganaQ")] = SpellDatabase[FNV("MorganaQ")];
	SpellDatabaseTest[FNV("Nami")][("NamiQ")] = SpellDatabase[FNV("NamiQ")];
	SpellDatabaseTest[FNV("Nami")][("NamiR")] = SpellDatabase[FNV("NamiR")];
	SpellDatabaseTest[FNV("Nautilus")][("NautilusAnchorDrag")] = SpellDatabase[FNV("NautilusAnchorDrag")];
	SpellDatabaseTest[FNV("Neeko")][("NeekoQ")] = SpellDatabase[FNV("NeekoQ")];
	SpellDatabaseTest[FNV("Neeko")][("NeekoE")] = SpellDatabase[FNV("NeekoE")];
	SpellDatabaseTest[FNV("Nidalee")][("JavelinToss")] = SpellDatabase[FNV("JavelinToss")];
	//SpellDatabaseTest[FNV("Nidalee")][("Bushwhack")] = SpellDatabase[FNV("Bushwhack")];
	SpellDatabaseTest[FNV("Nidalee")][("Swipe")] = SpellDatabase[FNV("Swipe")];
	SpellDatabaseTest[FNV("Nocturne")][("NocturneDuskbringer")] = SpellDatabase[FNV("NocturneDuskbringer")];
	SpellDatabaseTest[FNV("Nunu")][("NunuR")] = SpellDatabase[FNV("NunuR")];
	SpellDatabaseTest[FNV("Olaf")][("OlafAxeThrow")] = SpellDatabase[FNV("OlafAxeThrow")];
	SpellDatabaseTest[FNV("Orianna")][("OrianaIzuna")] = SpellDatabase[FNV("OrianaIzuna")]; //80 radius
	SpellDatabaseTest[FNV("Orianna")][("OrianaDetonateCommand")] = SpellDatabase[FNV("OrianaDetonateCommand")];
	SpellDatabaseTest[FNV("Ornn")][("OrnnQ")] = SpellDatabase[FNV("OrnnQ")];
	SpellDatabaseTest[FNV("Ornn")][("OrnnE")] = SpellDatabase[FNV("OrnnE")];
	SpellDatabaseTest[FNV("Ornn")][("OrnnRCharge")] = SpellDatabase[FNV("OrnnRCharge")];
	SpellDatabaseTest[FNV("Pantheon")][("PantheonQTap")] = SpellDatabase[FNV("PantheonQTap")];
	SpellDatabaseTest[FNV("Pantheon")][("PantheonQMissile")] = SpellDatabase[FNV("PantheonQMissile")];
	SpellDatabaseTest[FNV("Pantheon")][("PantheonR")] = SpellDatabase[FNV("PantheonR")];
	SpellDatabaseTest[FNV("Poppy")][("PoppyQSpell")] = SpellDatabase[FNV("PoppyQSpell")];
	SpellDatabaseTest[FNV("Poppy")][("PoppyRSpell")] = SpellDatabase[FNV("PoppyRSpell")];
	SpellDatabaseTest[FNV("Pyke")][("PykeQMelee")] = SpellDatabase[FNV("PykeQMelee")];
	SpellDatabaseTest[FNV("Pyke")][("PykeQRange")] = SpellDatabase[FNV("PykeQRange")];
	//SpellDatabaseTest[FNV("Pyke")][("PykeE")] = SpellDatabase[FNV("PykeE")];
	SpellDatabaseTest[FNV("Pyke")][("PykeR")] = SpellDatabase[FNV("PykeR")];
	SpellDatabaseTest[FNV("Qiyana")][("QiyanaQ")] = SpellDatabase[FNV("QiyanaQ")];
	SpellDatabaseTest[FNV("Qiyana")][("QiyanaQ_Grass")] = SpellDatabase[FNV("QiyanaQ_Grass")];
	SpellDatabaseTest[FNV("Qiyana")][("QiyanaQ_Rock")] = SpellDatabase[FNV("QiyanaQ_Rock")];
	SpellDatabaseTest[FNV("Qiyana")][("QiyanaQ_Water")] = SpellDatabase[FNV("QiyanaQ_Water")];
	SpellDatabaseTest[FNV("Qiyana")][("QiyanaR")] = SpellDatabase[FNV("QiyanaR")];
	SpellDatabaseTest[FNV("Quinn")][("QuinnQ")] = SpellDatabase[FNV("QuinnQ")];
	SpellDatabaseTest[FNV("Rakan")][("RakanQ")] = SpellDatabase[FNV("RakanQ")];
	SpellDatabaseTest[FNV("Rakan")][("RakanW")] = SpellDatabase[FNV("RakanW")];
	SpellDatabaseTest[FNV("RekSai")][("RekSaiQBurrowed")] = SpellDatabase[FNV("RekSaiQBurrowed")];
	SpellDatabaseTest[FNV("Rengar")][("RengarE")] = SpellDatabase[FNV("RengarE")];
	SpellDatabaseTest[FNV("Riven")][("RivenIzunaBlade")] = SpellDatabase[FNV("RivenIzunaBlade")];
	SpellDatabaseTest[FNV("Rumble")][("RumbleGrenade")] = SpellDatabase[FNV("RumbleGrenade")];
	SpellDatabaseTest[FNV("Ryze")][("RyzeQ")] = SpellDatabase[FNV("RyzeQ")];
	SpellDatabaseTest[FNV("Renata")][("RenataQ")] = SpellDatabase[FNV("RenataQ")];
	SpellDatabaseTest[FNV("Renata")][("RenataE")] = SpellDatabase[FNV("RenataE")];
	SpellDatabaseTest[FNV("Renata")][("RenataR")] = SpellDatabase[FNV("RenataR")];
	SpellDatabaseTest[FNV("Sejuani")][("SejuaniR")] = SpellDatabase[FNV("SejuaniR")];
	SpellDatabaseTest[FNV("Senna")][("SennaQCast")] = SpellDatabase[FNV("SennaQCast")];
	SpellDatabaseTest[FNV("Senna")][("SennaW")] = SpellDatabase[FNV("SennaW")];
	SpellDatabaseTest[FNV("Senna")][("SennaR")] = SpellDatabase[FNV("SennaR")];
	SpellDatabaseTest[FNV("Sett")][("SettW")] = SpellDatabase[FNV("SettW")];
	SpellDatabaseTest[FNV("Sett")][("SettE")] = SpellDatabase[FNV("SettE")];
	SpellDatabaseTest[FNV("Shyvana")][("ShyvanaFireball")] = SpellDatabase[FNV("ShyvanaFireball")];
	SpellDatabaseTest[FNV("Shyvana")][("ShyvanaFireballDragon2")] = SpellDatabase[FNV("ShyvanaFireballDragon2")];
	SpellDatabaseTest[FNV("Shyvana")][("ShyvanaTransformLeap")] = SpellDatabase[FNV("ShyvanaTransformLeap")];
	SpellDatabaseTest[FNV("Sion")][("SionQ")] = SpellDatabase[FNV("SionQ")];
	SpellDatabaseTest[FNV("Sion")][("SionE")] = SpellDatabase[FNV("SionE")];
	SpellDatabaseTest[FNV("Sivir")][("SivirQ")] = SpellDatabase[FNV("SivirQ")];
	SpellDatabaseTest[FNV("Skarner")][("SkarnerFractureMissile")] = SpellDatabase[FNV("SkarnerFractureMissile")];
	SpellDatabaseTest[FNV("Sona")][("SonaR")] = SpellDatabase[FNV("SonaR")];
	SpellDatabaseTest[FNV("Soraka")][("SorakaQ")] = SpellDatabase[FNV("SorakaQ")];
	SpellDatabaseTest[FNV("Swain")][("SwainQ")] = SpellDatabase[FNV("SwainQ")];
	SpellDatabaseTest[FNV("Swain")][("SwainW")] = SpellDatabase[FNV("SwainW")];
	SpellDatabaseTest[FNV("Swain")][("SwainE")] = SpellDatabase[FNV("SwainE")];
	SpellDatabaseTest[FNV("Sylas")][("SylasQ")] = SpellDatabase[FNV("SylasQ")];
	SpellDatabaseTest[FNV("Sylas")][("SylasE2")] = SpellDatabase[FNV("SylasE2")];
	SpellDatabaseTest[FNV("Syndra")][("SyndraQSpell")] = SpellDatabase[FNV("SyndraQSpell")];
	SpellDatabaseTest[FNV("Syndra")][("SyndraE")] = SpellDatabase[FNV("SyndraE")];
	SpellDatabaseTest[FNV("Syndra")][("SyndraESphereMissile")] = SpellDatabase[FNV("SyndraESphereMissile")];
	SpellDatabaseTest[FNV("TahmKench")][("TahmKenchQ")] = SpellDatabase[FNV("TahmKenchQ")];
	SpellDatabaseTest[FNV("Taliyah")][("TaliyahQMis")] = SpellDatabase[FNV("TaliyahQMis")];
	SpellDatabaseTest[FNV("Taliyah")][("TaliyahWVC")] = SpellDatabase[FNV("TaliyahWVC")];
	SpellDatabaseTest[FNV("Taliyah")][("TaliyahE")] = SpellDatabase[FNV("TaliyahE")];
	SpellDatabaseTest[FNV("Taliyah")][("TaliyahR")] = SpellDatabase[FNV("TaliyahR")];
	SpellDatabaseTest[FNV("Talon")][("TalonW")] = SpellDatabase[FNV("TalonW")];
	SpellDatabaseTest[FNV("Thresh")][("ThreshQMissile")] = SpellDatabase[FNV("ThreshQMissile")]; //DELAY 0.5
	SpellDatabaseTest[FNV("Thresh")][("ThreshEFlay")] = SpellDatabase[FNV("ThreshEFlay")];
	//SpellDatabaseTest[FNV("Tristana")][("TristanaW")] = SpellDatabase[FNV("TristanaW")];
	SpellDatabaseTest[FNV("Tryndamere")][("TryndamereE")] = SpellDatabase[FNV("TryndamereE")];
	SpellDatabaseTest[FNV("TwistedFate")][("WildCards")] = SpellDatabase[FNV("WildCards")];
	SpellDatabaseTest[FNV("Urgot")][("UrgotQ")] = SpellDatabase[FNV("UrgotQ")];
	SpellDatabaseTest[FNV("Urgot")][("UrgotE")] = SpellDatabase[FNV("UrgotE")];
	SpellDatabaseTest[FNV("Urgot")][("UrgotR")] = SpellDatabase[FNV("UrgotR")];
	SpellDatabaseTest[FNV("Varus")][("VarusQMissile")] = SpellDatabase[FNV("VarusQMissile")];
	SpellDatabaseTest[FNV("Varus")][("VarusE")] = SpellDatabase[FNV("VarusE")];
	SpellDatabaseTest[FNV("Varus")][("VarusR")] = SpellDatabase[FNV("VarusR")];
	SpellDatabaseTest[FNV("Veigar")][("VeigarBalefulStrike")] = SpellDatabase[FNV("VeigarBalefulStrike")];
	SpellDatabaseTest[FNV("Veigar")][("VeigarDarkMatterCastLockout")] = SpellDatabase[FNV("VeigarDarkMatterCastLockout")];
	//SpellDatabaseTest[FNV("Veigar")][("VeigarEventHorizon")] = SpellDatabase[FNV("VeigarEventHorizon")];
	SpellDatabaseTest[FNV("Velkoz")][("VelkozQMissileSplit")] = SpellDatabase[FNV("VelkozQMissileSplit")];
	SpellDatabaseTest[FNV("Velkoz")][("VelkozQ")] = SpellDatabase[FNV("VelkozQ")];
	SpellDatabaseTest[FNV("Velkoz")][("VelkozW")] = SpellDatabase[FNV("VelkozW")];
	SpellDatabaseTest[FNV("Velkoz")][("VelkozE")] = SpellDatabase[FNV("VelkozE")];
	SpellDatabaseTest[FNV("Vi")][("ViQ")] = SpellDatabase[FNV("ViQ")];
	SpellDatabaseTest[FNV("Viktor")][("ViktorGravitonField")] = SpellDatabase[FNV("ViktorGravitonField")];
	SpellDatabaseTest[FNV("Viktor")][("ViktorDeathRayMissile")] = SpellDatabase[FNV("ViktorDeathRayMissile")];
	SpellDatabaseTest[FNV("Viktor")][("ViktorEAugMissile")] = SpellDatabase[FNV("ViktorEAugMissile")];
	SpellDatabaseTest[FNV("Warwick")][("WarwickR")] = SpellDatabase[FNV("WarwickR")];
	SpellDatabaseTest[FNV("Xayah")][("XayahQ")] = SpellDatabase[FNV("XayahQ")]; // XerathQ
	SpellDatabaseTest[FNV("Xerath")][("XerathQ")] = SpellDatabase[FNV("XerathQ")];
	SpellDatabaseTest[FNV("Xerath")][("XerathArcaneBarrage2")] = SpellDatabase[FNV("XerathArcaneBarrage2")];
	SpellDatabaseTest[FNV("Xerath")][("XerathMageSpear")] = SpellDatabase[FNV("XerathMageSpear")]; //XerathMageSpear
	SpellDatabaseTest[FNV("Xerath")][("XerathLocusPulse")] = SpellDatabase[FNV("XerathLocusPulse")];
	//SpellDatabaseTest[FNV("Lillia")][("XerathLocusOfPower2")] = SpellDatabase[FNV("XerathLocusOfPower2")] ;
	SpellDatabaseTest[FNV("XinZhao")][("XinZhaoW")] = SpellDatabase[FNV("XinZhaoW")];
	SpellDatabaseTest[FNV("Yasuo")][("YasuoQ1")] = SpellDatabase[FNV("YasuoQ1")];
	SpellDatabaseTest[FNV("Yasuo")][("YasuoQ2")] = SpellDatabase[FNV("YasuoQ2")];
	SpellDatabaseTest[FNV("Yasuo")][("YasuoQ3")] = SpellDatabase[FNV("YasuoQ3")];// delay 0.339 YasuoQ3Mis
	SpellDatabaseTest[FNV("Yasuo")][("YasuoQ3Mis")] = SpellDatabase[FNV("YasuoQ3Mis")];// delay 0.339 YasuoQ3Mis
	SpellDatabaseTest[FNV("Zac")][("ZacQ")] = SpellDatabase[FNV("ZacQ")];
	SpellDatabaseTest[FNV("Zed")][("ZedQ")] = SpellDatabase[FNV("ZedQ")];
	SpellDatabaseTest[FNV("Ziggs")][("ZiggsQSpell")] = SpellDatabase[FNV("ZiggsQSpell")]; //polygon
	SpellDatabaseTest[FNV("Ziggs")][("ZiggsW")] = SpellDatabase[FNV("ZiggsW")];
	SpellDatabaseTest[FNV("Ziggs")][("ZiggsE")] = SpellDatabase[FNV("ZiggsE")];
	SpellDatabaseTest[FNV("Ziggs")][("ZiggsR")] = SpellDatabase[FNV("ZiggsR")];
	SpellDatabaseTest[FNV("Zilean")][("ZileanQ")] = SpellDatabase[FNV("ZileanQ")];
	SpellDatabaseTest[FNV("Zoe")][("ZoeQ")] = SpellDatabase[FNV("ZoeQ")];
	SpellDatabaseTest[FNV("Zoe")][("ZoeQMis2")] = SpellDatabase[FNV("ZoeQMis2")];
	SpellDatabaseTest[FNV("Zoe")][("ZoeE")] = SpellDatabase[FNV("ZoeE")];
	SpellDatabaseTest[FNV("Zyra")][("ZyraQ")] = SpellDatabase[FNV("ZyraQ")];
	SpellDatabaseTest[FNV("Zyra")][("ZyraE")] = SpellDatabase[FNV("ZyraE")];
	SpellDatabaseTest[FNV("Zyra")][("ZyraR")] = SpellDatabase[FNV("ZyraR")];
	SpellDatabaseTest[FNV("Seraphine")][("SeraphineQCast")] = SpellDatabase[FNV("SeraphineQCast")];
	SpellDatabaseTest[FNV("Seraphine")][("SeraphineQCastEcho")] = SpellDatabase[FNV("SeraphineQCastEcho")];
	SpellDatabaseTest[FNV("Seraphine")][("SeraphineECast")] = SpellDatabase[FNV("SeraphineECast")];
	SpellDatabaseTest[FNV("Seraphine")][("SeraphineECastEcho")] = SpellDatabase[FNV("SeraphineECastEcho")];
	SpellDatabaseTest[FNV("Seraphine")][("SeraphineR")] = SpellDatabase[FNV("SeraphineR")];
	SpellDatabaseTest[FNV("Yone")][("YoneQ")] = SpellDatabase[FNV("YoneQ")];
	SpellDatabaseTest[FNV("Yone")][("YoneW")] = SpellDatabase[FNV("YoneW")];
	SpellDatabaseTest[FNV("Yone")][("YoneQ3")] = SpellDatabase[FNV("YoneQ3")];// delay 0.339
	SpellDatabaseTest[FNV("Yone")][("YoneR")] = SpellDatabase[FNV("YoneR")];// delay 0.339
	SpellDatabaseTest[FNV("Samira")][("SamiraQ")] = SpellDatabase[FNV("SamiraQ")];// delay 0.339
	SpellDatabaseTest[FNV("Rell")][("RellQ")] = SpellDatabase[FNV("RellQ")];// delay 0.339

	SpellDatabaseTest[FNV("Viego")][("ViegoQ")] = SpellDatabase[FNV("ViegoQ")];// delay 0.339
	SpellDatabaseTest[FNV("Viego")][("ViegoW")] = SpellDatabase[FNV("ViegoW")];// delay 0.339
	SpellDatabaseTest[FNV("Viego")][("ViegoR")] = SpellDatabase[FNV("ViegoR")];
}
void SpellDB()
{
	SpellDatabase[FNV("LilliaERollingMissile")] = { "linear", 1200, 12500, 0.4, 120, 1, false, true, true, true, true, false, true };
	SpellDatabase[FNV("AkshanQ")] = { "linear", 1500, 850, 0.25, 60, 1, false, true, true, true, true, false, true };
	SpellDatabase[FNV("AatroxQ")] = { "linear", FLT_MAX, 650, 0.6, 130, 3, true, false, false, false, false, false, true };
	SpellDatabase[FNV("AatroxQ")] = { "linear", FLT_MAX, 650, 0.6, 130, 3, true, false, false, false, false, false, true };
	SpellDatabase[FNV("AatroxQ2")] = { "polygon", FLT_MAX, 500, 0.6, 200, 3, true, false, false, false, false, false, true };
	SpellDatabase[FNV("AatroxQ3")] = { "circular", FLT_MAX, 200, 0.6, 300, 4, true, false, false, false, false, false, false };
	SpellDatabase[FNV("AatroxW")] = { "linear", 1800, 825, 0.25, 80, 2, true, true, true, true, true, false, true };
	SpellDatabase[FNV("AhriOrbofDeception")] = { "linear", 2500, 880, 0.25, 100, 2, false, false, true, true, true, false, true };
	SpellDatabase[FNV("AhriSeduce")] = { "linear", 1500, 975, 0.25, 60, 1, true, true, true, true, true, false, true };
	//SpellDatabase[FNV("AkaliQ")] = { "conic", 3200, 550, 0.25, 60, 2, false, false, true, false, false, false, true ,45 };
	SpellDatabase[FNV("AkaliE")] = { "linear", 1800, 825, 0.25, 70, 2, false, true, true, true, true, false, true };
	SpellDatabase[FNV("AkaliR")] = { "linear", 1800, 675, 0, 65, 4, true, false, false, false, false, false, true };
	SpellDatabase[FNV("AkaliRb")] = { "linear", 3600, 525, 0, 65, 4, false, false, false, false, false, false, true };
	SpellDatabase[FNV("Pulverize")] = { "circular", FLT_MAX, 0, 0.25, 365, 3, true, false, false, false, false, false, false };
	SpellDatabase[FNV("BandageToss")] = { "linear", 2000, 1100, 0.25, 80, 3, true, true, true, false, true, false, true };
	SpellDatabase[FNV("CurseoftheSadMummy")] = { "circular", FLT_MAX, 0, 0.25, 550, 5, true, false, false, false, false, false, false };
	SpellDatabase[FNV("FlashFrostSpell")] = { "linear", 850, 1100, 0.25, 220, 2, true, false, true, true, true, false, true };
	//SpellDatabase[FNV("AnnieW")] = { "conic", FLT_MAX, 600, 0.25, 0, 2, false, false, false, false, false, false, true,50 };
	SpellDatabase[FNV("AnnieR")] = { "circular", FLT_MAX, 600, 0.25, 290, 5, false, false, false, false, false, false, false };
	SpellDatabase[FNV("ApheliosCalibrumQ")] = { "linear", 1850, 1450, 0.35, 60, 1, false, true, true, false, true, false, true };
	//SpellDatabase[FNV("ApheliosInfernumQ")] = { "conic", 1500, 850, 0.25, 65, 2, false, false, true, false, false, false, true ,  45 };
	SpellDatabase[FNV("ApheliosR")] = { "linear", 2050, 1600, 0.5, 125, 3, false, false, true, false, true, false, true };
	//SpellDatabase[FNV("Volley")] = { "conic", 2000, 1200, 0.25, 20, 2, true, true, true, false, true, false, true , 40,false,true,false };
	SpellDatabase[FNV("EnchantedCrystalArrow")] = { "linear", 1600, 12500, 0.25, 130, 4, true, false, true, true, true, false, true };
	SpellDatabase[FNV("AurelionSolQ")] = { "linear", 850, 1075, 0, 110, 2, true, false, true, true, true, false, true };
	SpellDatabase[FNV("AurelionSolR")] = { "linear", 4500, 1500, 0.35, 120, 5, true, false, false, false, false, false, true };
	SpellDatabase[FNV("AzirR")] = { "linear", 1400, 500, 0.3, 250, 5, true, false, false, false, false, false, true };
	SpellDatabase[FNV("BardQ")] = { "linear", 1500, 950, 0.25, 60, 2, true, true, true, true, true, false, true };
	SpellDatabase[FNV("BardR")] = { "circular", 2100, 3400, 0.5, 350, 2, true, false, false, false, true, false, false };
	SpellDatabase[FNV("RocketGrab")] = { "linear", 1800, 1115, 0.25, 70, 3, true, true, true, true, true, false, true };
	SpellDatabase[FNV("StaticField")] = { "circular", FLT_MAX, 0, 0.25, 600, 4, true, false, false, false, false, false, false };
	SpellDatabase[FNV("BrandQ")] = { "linear", 1600, 1050, 0.25, 60, 1, false, true, true, true, true, false, true };
	SpellDatabase[FNV("BrandW")] = { "circular", FLT_MAX, 900, 0.85, 250, 2, false, false, false, false, false, false, false };
	SpellDatabase[FNV("BraumQ")] = { "linear", 1700, 1000, 0.25, 70, 3, true, true, true, true, true, false, true };
	SpellDatabase[FNV("BraumR")] = { "linear", 1400, 1250, 0.5, 115, 4, true, false, true, true, true, false, true };
	SpellDatabase[FNV("CaitlynQ")] = { "linear", 2200, 1250, 0.625, 90, 1, false, false, true, true, true, false, true };
	//SpellDatabase[FNV("CaitlynYordleTrap")] = { "circular", FLT_MAX, 800, 0.35, 75, 1, true, false, false, false, false, false, false };
	SpellDatabase[FNV("CaitlynEntrapment")] = { "linear", 1600, 750, 0.15, 70, 2, true, true, true, true, true, false, true };
	SpellDatabase[FNV("CamilleE")] = { "linear", 1900, 800, 0, 60, 1, false, false, true, true, true, false, true };
	SpellDatabase[FNV("CamilleEDash2")] = { "linear", 1900, 400, 0, 60, 2, true, false, true, false, false, false, true };
	SpellDatabase[FNV("CassiopeiaQ")] = { "circular", FLT_MAX, 850, 0.75, 150, 2, false, false, false, false, false, false, false };
	SpellDatabase[FNV("CassiopeiaW")] = { "circular", 2500, 800, 0.75, 160, 2, true, false, true, false, false, false, false };
	SpellDatabase[FNV("CassiopeiaR")] = { "conic", FLT_MAX, 825, 0.5, 0, 5, true, false, false, false, false, false, true  , 80 };
	SpellDatabase[FNV("Rupture")] = { "circular", FLT_MAX, 950, 1.2, 250, 2, true, false, false, false, false, false, false };
	//SpellDatabase[FNV("FeralScream")] = { "conic", FLT_MAX, 650, 0.5, 0, 2, true, false, false, false, false, false, true , 56,false,true,true };
	SpellDatabase[FNV("PhosphorusBomb")] = { "circular", 1000, 825, 0.25, 250, 2, false, false, true, false, true, false, false };
	//SpellDatabase[FNV("EzrealMysticShotMissile")] = { "linear", 3200, 1450, 0.500, 40, 1, false, true, true, true, true, false, true };
	SpellDatabase[FNV("MissileBarrage")] = { "linear", 2000, 1500, 0.175, 40, 1, false, true, true, true, true, false, true };
	SpellDatabase[FNV("DianaQ")] = { "circular", 1900, 900, 0.25, 185, 2, false, true, true, false, false, false, false };
	SpellDatabase[FNV("DravenDoubleShot")] = { "linear", 1600, 1050, 0.25, 130, 3, true, false, true, true, true, false, true };
	SpellDatabase[FNV("DravenRCast")] = { "linear", 2000, 12500, 0.25, 160, 4, false, false, true, true, false, false, true };
	SpellDatabase[FNV("DrMundoQ")] = { "linear", 2000, 975, 0.25, 60, 2, true, true, true, true, true, false, true };
	SpellDatabase[FNV("EkkoQ")] = { "linear", 1650, 1175, 0.25, 60, 1, true, false, true, true, true, false, true };
	SpellDatabase[FNV("EkkoW")] = { "circular", FLT_MAX, 1600, 3.35, 400, 1, true, false, false, false, false, false, false };
	SpellDatabase[FNV("EliseHumanE")] = { "linear", 1600, 1075, 0.25, 55, 1, true, true, true, true, true, false, true };
	SpellDatabase[FNV("EvelynnQ")] = { "linear", 2400, 800, 0.25, 60, 2, false, true, true, true, true, false, true };
	SpellDatabase[FNV("EvelynnR")] = { "conic", FLT_MAX, 450, 0.35, 180, 5, false, false, false, false, false, false, true , 180 };
	SpellDatabase[FNV("EzrealQ")] = { "linear", 2000, 1150, 0.25, 60, 1, false, true, true, true, true, false, true };
	SpellDatabase[FNV("EzrealW")] = { "linear", 2000, 1150, 0.25, 60, 1, false, false, true, true, true, false, true };
	SpellDatabase[FNV("EzrealTrueshotBarrage")] = { "linear", 2000, 12500, 1, 160, 4, false, false, true, true, true, false, true }; // EzrealR
	SpellDatabase[FNV("FioraW")] = { "linear", 3200, 750, 0.75, 70, 2, true, false, true, false, false, false, true };
	SpellDatabase[FNV("FizzR")] = { "linear", 1300, 1300, 0.25, 150, 5, true, false, true, true, true, false, true };
	SpellDatabase[FNV("GalioQ")] = { "circular", 1150, 825, 0.25, 235, 2, false, false, true, false, true, false, false };
	SpellDatabase[FNV("GalioE")] = { "linear", 2300, 650, 0.4, 160, 3, true, false, false, false, false, false, true };
	SpellDatabase[FNV("GnarQMissile")] = { "linear", 2500, 1125, 0.25, 55, 2, true, false, true, true, true, false, true };
	SpellDatabase[FNV("GnarBigQMissile")] = { "linear", 2100, 1125, 0.5, 90, 2, true, true, true, true, true, false, true };
	SpellDatabase[FNV("GnarBigW")] = { "linear", FLT_MAX, 575, 0.6, 100, 3, true, false, false, false, false, false, true };
	SpellDatabase[FNV("GnarR")] = { "circular", FLT_MAX, 0, 0.25, 475, 5, true, false, false, false, false, false, false };
	SpellDatabase[FNV("GragasQ")] = { "circular", 1000, 850, 0.25, 275, 2, true, false, true, false, true, false, false };
	SpellDatabase[FNV("GragasR")] = { "circular", 1800, 1000, 0.25, 400, 5, true, false, true, false, true, false, false };
	SpellDatabase[FNV("GravesQLineSpell")] = { "polygon", FLT_MAX, 800, 1.4, 50, 1, false, false, true, true, false, false, true };
	SpellDatabase[FNV("GravesSmokeGrenade")] = { "circular", 1500, 950, 0.15, 250, 2, true, false, true, false, true, false, false };
	SpellDatabase[FNV("GravesChargeShot")] = { "polygon", 2100, 1000, 0.25, 100, 5, false, false, true, true, true, false, true };
	SpellDatabase[FNV("HecarimUlt")] = { "linear", 1100, 1650, 0.2, 280, 4, true, false, false, false, true, false, true };
	SpellDatabase[FNV("HeimerdingerW")] = { "linear", 2050, 1325, 0.25, 100, 2, false, false, true, true, false, false, true };
	SpellDatabase[FNV("HeimerdingerE")] = { "circular", 1200, 970, 0.25, 250, 2, true, false, true, false, true, false, false };
	SpellDatabase[FNV("HeimerdingerEUlt")] = { "circular", 1200, 970, 0.25, 250, 3, true, false, true, false, true, false, false };
	SpellDatabase[FNV("IllaoiQ")] = { "linear", FLT_MAX, 850, 0.75, 100, 2, false, true, false, false, false, false, true };
	SpellDatabase[FNV("IllaoiE")] = { "linear", 1900, 900, 0.25, 50, 1, false, true, true, false, true, false, true };
	SpellDatabase[FNV("IreliaW2")] = { "linear", FLT_MAX, 825, 0.25, 120, 3, true, false, false, false, false, false, true };
	SpellDatabase[FNV("IreliaEParticleMissile")] = { "linear", FLT_MAX, 1550, 0.5, 70, 2, true, false, false, false, false, false, false };
	SpellDatabase[FNV("IreliaR")] = { "linear", 2000, 950, 0.4, 160, 4, true, false, true, false, true, false, true };
	SpellDatabase[FNV("IvernQ")] = { "linear", 1300, 1075, 0.25, 80, 1, true, true, true, true, true, false, true };
	SpellDatabase[FNV("HowlingGaleSpell")] = { "linear", 667, 1750, 0, 100, 2, true, false, true, false, true, true, false };
	SpellDatabase[FNV("JarvanIVDragonStrike")] = { "linear", FLT_MAX, 770, 0.4, 70, 2, true, false, false, false, false, false, true };
	SpellDatabase[FNV("JarvanIVDemacianStandard")] = { "circular", 3440, 860, 0, 175, 2, false, false, false, false, false, false, false };
	SpellDatabase[FNV("JayceShockBlast")] = { "linear", 1450, 1050, 0.214, 70, 1, false, true, true, true, true, false, true };
	SpellDatabase[FNV("JayceShockBlastWallMis")] = { "linear", 2350, 1600, 0.152, 115, 3, false, true, true, true, true, true, false };
	SpellDatabase[FNV("JhinW")] = { "linear", 10000, 2550, 0.75, 40, 1, true, false, true, false, false, false, true };
	SpellDatabase[FNV("JhinE")] = { "circular", 1600, 750, 0.25, 130, 1, true, false, false, false, true, false, false };
	SpellDatabase[FNV("JhinRShot")] = { "linear", 5000, 3500, 0.0, 80, 2, true, false, true, true, true, false, true };
	SpellDatabase[FNV("JinxWMissile")] = { "linear", 3300, 1450, 0.6, 60, 1, true, true, true, true, true, false, true };
	SpellDatabase[FNV("JinxEHit")] = { "polygon", 1100, 900, 1.5, 120, 1, true, false, true, false, true, false, true };
	SpellDatabase[FNV("JinxR")] = { "linear", 1700, 12500, 0.6, 140, 4, false, false, true, true, true, false, true };
	SpellDatabase[FNV("KaisaW")] = { "linear", 1750, 3000, 0.4, 100, 1, false, true, true, true, true, false, true };
	SpellDatabase[FNV("KalistaMysticShot")] = { "linear", 2400, 1150, 0.25, 40, 1, false, true, true, true, true, false, true };
	SpellDatabase[FNV("KarmaQ")] = { "linear", 1700, 950, 0.25, 60, 2, true, true, true, true, true, false, true };
	SpellDatabase[FNV("KarmaQMantra")] = { "linear", 1700, 950, 0.25, 80, 2, true, true, true, true, true, false, true };
	SpellDatabase[FNV("KarthusLayWasteA1")] = { "circular", FLT_MAX, 875, 0.9, 175, 1, false, false, false, false, false, false, false };
	SpellDatabase[FNV("KarthusLayWasteA2")] = { "circular", FLT_MAX, 875, 0.9, 175, 1, false, false, false, false, false, false, false };
	SpellDatabase[FNV("KarthusLayWasteA3")] = { "circular", FLT_MAX, 875, 0.9, 175, 1, false, false, false, false, false, false, false };
	//SpellDatabase[FNV("ForcePulse")] = { "conic", FLT_MAX, 600, 0.3, 0, 3, true, false, false, false, false, false, true ,80 };
	SpellDatabase[FNV("RiftWalk")] = { "circular", FLT_MAX, 500, 1.25, 250, 3, false, false, false, false, false, false, false };
	SpellDatabase[FNV("KayleQ")] = { "linear", 1600, 900, 0.25, 60, 1, true, false, true, true, true, false, true };
	SpellDatabase[FNV("KaynW")] = { "linear", FLT_MAX, 900, 0.55, 90, 2, true, false, false, false, false, false, true };
	SpellDatabase[FNV("KennenShurikenHurlMissile1")] = { "linear", 1700, 1050, 0.175, 50, 2, false, true, true, true, true, false, true };
	SpellDatabase[FNV("KhazixW")] = { "linear", 1700, 1000, 0.25, 70, 1, false, true, true, true, true, false, true };
	SpellDatabase[FNV("KhazixWLong")] = { "threeway", 1700, 1000, 0.25, 70, 2, true, true, true, true, false, false, true ,23 };
	SpellDatabase[FNV("KledQ")] = { "linear", 1600, 800, 0.25, 45, 1, true, false, true, false, true, false, true };
	//SpellDatabase[FNV("KledRiderQ")] = { "conic", 3000, 700, 0.25, 0, 3, false, false, true, false, true, false, true ,25 };
	SpellDatabase[FNV("KogMawQ")] = { "linear", 1650, 1175, 0.25, 70, 1, false, true, true, true, true, false, true };
	SpellDatabase[FNV("KogMawVoidOozeMissile")] = { "linear", 1400, 1360, 0.25, 120, 2, true, false, true, true, true, false, true };
	SpellDatabase[FNV("KogMawLivingArtillery")] = { "circular", FLT_MAX, 1300, 1.1, 200, 1, false, false, false, false, false, false, false };
	SpellDatabase[FNV("LeblancE")] = { "linear", 1750, 925, 0.25, 55, 1, true, true, true, true, true, false, true };
	SpellDatabase[FNV("LeblancRE")] = { "linear", 1750, 925, 0.25, 55, 1, true, true, true, true, true, false, true };
	SpellDatabase[FNV("BlindMonkQOne")] = { "linear", 1800, 1100, 0.25, 60, 1, false, true, true, true, true, false, true };
	SpellDatabase[FNV("LeonaZenithBlade")] = { "linear", 2000, 875, 0.25, 70, 2, true, false, true, true, true, false, true };
	SpellDatabase[FNV("LeonaSolarFlare")] = { "circular", FLT_MAX, 1200, 0.85, 300, 5, true, false, false, false, false, false, false };
	SpellDatabase[FNV("LissandraQMissile")] = { "linear", 2200, 750, 0.25, 75, 2, true, false, true, true, true, false, true };
	SpellDatabase[FNV("LissandraEMissile")] = { "linear", 850, 1025, 0.25, 125, 2, false, false, true, true, true, false, true };
	SpellDatabase[FNV("LucianQ")] = { "linear", FLT_MAX, 900, 0.35, 65, 2, false, false, false, false, false, false, true };
	SpellDatabase[FNV("LucianW")] = { "linear", 1600, 900, 0.25, 80, 2, false, true, true, true, true, false, true };
	SpellDatabase[FNV("LucianRMissileOffhand")] = { "linear", FLT_MAX, 1200, 0.25, 80, 2, false, true, true, true, true, false, true };
	SpellDatabase[FNV("LuluQ")] = { "linear", 1450, 925, 0.25, 60, 1, true, false, true, true, true, false, true };
	SpellDatabase[FNV("LuxLightBinding")] = { "linear", 1200, 1175, 0.25, 70, 1, true, false, true, true, true, false, true };
	SpellDatabase[FNV("LuxLightStrikeKugel")] = { "circular", 1200, 1100, 0.25, 300, 3, true, true, true, false, true, false, false };
	SpellDatabase[FNV("LuxMaliceCannon")] = { "linear", FLT_MAX, 3340, 1, 120, 4, false, false, false, false, true, false, true };
	SpellDatabase[FNV("Landslide")] = { "circular", FLT_MAX, 0, 0.242, 400, 2, true, false, false, false, false, false, false };
	SpellDatabase[FNV("MalzaharQ")] = { "rectangular", 1600, 900, 0.5, 100, 1, true, false, false, false, false, false, false };
	SpellDatabase[FNV("MaokaiQ")] = { "linear", 1600, 600, 0.375, 110, 2, true, false, true, true, true, false, true };
	//SpellDatabase[FNV("MissFortuneBulletTime")] = { "conic", 2000, 1400, 0.25, 100, 4, false, false, true, false, false, false, true , 34 };
	SpellDatabase[FNV("MordekaiserQ")] = { "polygon", FLT_MAX, 675, 0.4, 200, 2, false, false, false, false, false, false, true };
	SpellDatabase[FNV("MordekaiserE")] = { "polygon", FLT_MAX, 900, 0.9, 140, 3, true, false, true, true, false, false, false };
	SpellDatabase[FNV("MorganaQ")] = { "linear", 1200, 1250, 0.25, 70, 1, true, true, true, true, true, false, true };
	SpellDatabase[FNV("NamiQ")] = { "circular", FLT_MAX, 875, 1, 180, 1, true, false, true, false, true, false, false };
	SpellDatabase[FNV("NamiRMissile")] = { "linear", 850, 2750, 0.5, 250, 3, true, false, true, true, true, false, true };
	SpellDatabase[FNV("NautilusAnchorDrag")] = { "linear", 2000, 1122, 0.25, 150, 3, true, true, true, true, true, false, true };
	SpellDatabase[FNV("NeekoQ")] = { "circular", 1500, 800, 0.25, 200, 2, true, false, true, false, true, false, false };
	SpellDatabase[FNV("NeekoE")] = { "linear", 1300, 1000, 0.25, 70, 1, true, false, true, true, true, false, true };
	SpellDatabase[FNV("JavelinToss")] = { "linear", 1300, 1500, 0.25, 40, 1, false, true, true, true, true, false, true };
	//SpellDatabase[FNV("Bushwhack")] = { "circular", FLT_MAX, 900, 1.25, 85, 1, false, false, false, false, false, false, false };
	SpellDatabase[FNV("Swipe")] = { "conic", FLT_MAX, 350, 0.25, 0, 2, false, false, false, false, false, false, true , 180 };
	SpellDatabase[FNV("NocturneDuskbringer")] = { "linear", 1600, 1200, 0.25, 60, 2, false, false, true, true, true, false, true };
	SpellDatabase[FNV("NunuR")] = { "circular", FLT_MAX, 0, 3, 650, 5, true, false, false, false, false, false, false };
	SpellDatabase[FNV("OlafAxeThrow")] = { "linear", 1600, 1000, 0.25, 90, 2, true, false, true, true, true, false, false };
	SpellDatabase[FNV("OrianaIzuna")] = { "circular", 1400, 825, 0, 250, 2, false, false, false, false, true, true, false }; //80 radius
	SpellDatabase[FNV("OrianaDetonateCommand")] = { "circular", 1400, 0, 0.5, 325, 5, false, false, false, false, true, true, false };
	SpellDatabase[FNV("OrnnQ")] = { "linear", 1800, 800, 0.3, 65, 1, true, false, true, true, false, false, true };
	SpellDatabase[FNV("OrnnE")] = { "linear", 1600, 800, 0.35, 150, 3, true, false, false, false, false, false, true };
	SpellDatabase[FNV("OrnnRCharge")] = { "linear", 1650, 2500, 0.5, 200, 3, true, false, true, true, false, false, true };
	SpellDatabase[FNV("PantheonQTap")] = { "linear", FLT_MAX, 575, 0.25, 80, 2, false, false, false, false, false, false, true };
	SpellDatabase[FNV("PantheonQMissile")] = { "linear", 2700, 1200, 0.25, 60, 2, false, false, true, true, true, false, true };
	SpellDatabase[FNV("PantheonR")] = { "linear", 2250, 5500, 4, 250, 3, false, false, true, true, false, false, false, 0,true,true,true};
	SpellDatabase[FNV("PoppyQSpell")] = { "linear", FLT_MAX, 430, 0.332, 100, 2, true, false, false, false, false, false, true };
	SpellDatabase[FNV("PoppyRSpell")] = { "linear", 2000, 1200, 0.33, 100, 3, true, false, true, true, true, false, true };
	SpellDatabase[FNV("PykeQMelee")] = { "linear", FLT_MAX, 400, 0.25, 70, 2, true, false, false, false, false, false, true };
	SpellDatabase[FNV("PykeQRange")] = { "linear", 2000, 1100, 0.2, 70, 2, true, true, true, true, true, false, true };
	//SpellDatabase[FNV("PykeE")] = { "linear", 3000, 12500, 0, 110, 2, true, false, false, true, false, false, true };
	SpellDatabase[FNV("PykeR")] = { "linear", FLT_MAX, 750, 0.5, 85, 5, false, false, false, false, false, false, false };
	SpellDatabase[FNV("QiyanaQ")] = { "linear", FLT_MAX, 500, 0.25, 60, 2, false, false, false, false, false, false, true };
	SpellDatabase[FNV("QiyanaQ_Grass")] = { "linear", 1600, 925, 0.25, 70, 2, false, false, true, true, false, false, true };
	SpellDatabase[FNV("QiyanaQ_Rock")] = { "linear", 1600, 925, 0.25, 70, 2, false, false, true, true, false, false, true };
	SpellDatabase[FNV("QiyanaQ_Water")] = { "linear", 1600, 925, 0.25, 70, 2, true, false, true, true, false, false, true };
	SpellDatabase[FNV("QiyanaR")] = { "linear", 2000, 950, 0.25, 190, 4, true, false, true, true, false, false, true };
	SpellDatabase[FNV("QuinnQ")] = { "linear", 1550, 1025, 0.25, 60, 1, false, true, true, true, true, false, true };


	SpellDatabase[FNV("RenataQ")] = { "linear", 1450, 900, 0.25, 70, 3, true, true, true, true, true, false, true };
	SpellDatabase[FNV("RenataE")] = { "linear", 1450, 800, 0.25, 110, 1, false, false, true, true, true, false, true };
	SpellDatabase[FNV("RenataR")] = { "linear", 800, 2000, 0.75, 300, 5, true, false, true, true, true, false, true };


	SpellDatabase[FNV("RakanW")] = { "circular", FLT_MAX, 650, 0.7, 265, 3, true, false, false, false, false, false, false };
	SpellDatabase[FNV("RekSaiQBurrowed")] = { "linear", 1950, 1625, 0.125, 65, 2, false, true, true, true, true, false, true };
	SpellDatabase[FNV("RengarE")] = { "linear", 1500, 1000, 0.25, 70, 1, true, true, true, true, true, false, true };
	SpellDatabase[FNV("RivenIzunaBlade")] = { "conic", 1600, 900, 0.25, 0, 5, false, false, true, false, false, false, true , 75 };
	SpellDatabase[FNV("RumbleGrenade")] = { "linear", 2000, 850, 0.25, 60, 2, true, true, true, true, true, false, true };
	SpellDatabase[FNV("RyzeQ")] = { "linear", 1700, 1000, 0.25, 55, 1, false, true, true, true, true, false, true };
	SpellDatabase[FNV("SejuaniR")] = { "linear", 1600, 1300, 0.25, 120, 5, true, false, true, true, true, false, true };
	SpellDatabase[FNV("SennaQCast")] = { "linear", FLT_MAX, 1400, 0.4, 80, 2, false, false, false, true, false, false, true };
	SpellDatabase[FNV("SennaW")] = { "linear", 1150, 1300, 0.25, 60, 1, true, true, true, true, true, false, true };
	SpellDatabase[FNV("SennaR")] = { "linear", 20000, 12500, 1, 180, 4, false, false, true, true, true, false, true };
	SpellDatabase[FNV("SettW")] = { "polygon", FLT_MAX, 790, 0.75, 160, 2, false, false, false, false, false, false, true };
	SpellDatabase[FNV("SettE")] = { "polygon", FLT_MAX, 490, 0.25, 175, 3, true, false, false, false, false, false, true };
	SpellDatabase[FNV("ShyvanaFireball")] = { "linear", 1575, 925, 0.25, 60, 1, false, false, true, false, true, false, true };
	SpellDatabase[FNV("ShyvanaFireballDragon2")] = { "linear", 1575, 975, 0.333, 60, 2, false, false, true, false, true, false, false };
	SpellDatabase[FNV("ShyvanaTransformLeap")] = { "linear", 700, 850, 0.25, 150, 4, true, false, false, false, false, false, false };
	SpellDatabase[FNV("SionQ")] = { "linear", FLT_MAX, 750, 2, 150, 3, true, false, false, false, false, false, true };
	SpellDatabase[FNV("SionE")] = { "linear", 1800, 800, 0.25, 80, 2, true, false, true, false, true, false, true };
	SpellDatabase[FNV("SivirQ")] = { "linear", 1350, 1250, 0.25, 90, 2, false, false, true, false, true, false, true };
	SpellDatabase[FNV("SkarnerFractureMissile")] = { "linear", 1500, 1000, 0.25, 70, 1, true, false, true, false, true, false, true };
	SpellDatabase[FNV("SonaR")] = { "linear", 2400, 1000, 0.25, 140, 5, true, false, true, false, true, false, true };
	SpellDatabase[FNV("SorakaQ")] = { "circular", 1150, 810, 0.25, 235, 2, true, false, false, false, true, false, false };
	SpellDatabase[FNV("SwainQ")] = { "conic", FLT_MAX, 725, 0.25, 0, 2, false, false, true, false, false, false, true , 35 };
	SpellDatabase[FNV("SwainW")] = { "circular", FLT_MAX, 7500,1.5, 300, 1, true, false, false, false, false, false, false };
	SpellDatabase[FNV("SwainE")] = { "linear", 1800, 850, 0.25, 85, 2, true, false, true, false, false, false, true };
	SpellDatabase[FNV("SylasQ")] = { "polygon", FLT_MAX, 775, 0.4, 55, 2, true, false, false, false, false, false, true };
	SpellDatabase[FNV("SylasE2")] = { "linear", 1600, 850, 0.25, 60, 2, true, true, true, true, true, false, true };
	SpellDatabase[FNV("SyndraQSpell")] = { "circular", FLT_MAX, 800, 0.625, 200, 2, false, false, false, false, true, true, false };
	//SpellDatabase[FNV("SyndraE")] = { "conic", 1600, 700, 0.25, 0, 3, true, false, true, false, false, false, true , 40 };
	SpellDatabase[FNV("SyndraESphereMissile")] = { "linear", 2000, 1250, 0.25, 100, 3, true, false, true, false, true, true, false };
	SpellDatabase[FNV("TahmKenchQ")] = { "linear", 2800, 900, 0.25, 70, 2, true, true, true, false, true, false, true };
	//SpellDatabase[FNV("TaliyahQMis")] = { "linear", 3600, 1000, 0, 100, 2, false, true, true, false, true, true, true };
	SpellDatabase[FNV("TaliyahWVC")] = { "circular", FLT_MAX, 900, 0.85, 150, 1, true, false, false, false, false, false, false };
	//SpellDatabase[FNV("TaliyahE")] = { "conic", 2000, 800, 0.45, 0, 2, true, false, false, false, false, false, true , 80 };
	//SpellDatabase[FNV("TaliyahR")] = { "linear", 1700, 3000, 1, 120, 1, true, false, false, false, true, false, true };
	//SpellDatabase[FNV("TalonW")] = { "conic", 2500, 650, 0.25, 75, 2, true, false, true, false, true, false, true , 26 };
	SpellDatabase[FNV("ThreshQMissile")] = { "linear", 1900, 1100, 0.5, 70, 1, true, true, true, false, true, true, true }; //DELAY 0.5
	SpellDatabase[FNV("ThreshEFlay")] = { "linear", FLT_MAX, 500, 0.389, 110, 3, true, true, false, false, false, false, true };
	//SpellDatabase[FNV("TristanaW")] = { "circular", 1100, 900, 0.25, 300, 2, true, false, false, false, false, false, false };
	SpellDatabase[FNV("TryndamereE")] = { "linear", 1300, 660, 0, 225, 2, false, false, false, false, false, false, true };
	SpellDatabase[FNV("WildCards")] = { "threeway", 1000, 1450, 0.25, 40, 1, false, false, true, false, true, false, true ,28 };
	SpellDatabase[FNV("UrgotQ")] = { "circular", FLT_MAX, 800, 0.6, 180, 2, true, false, true, false, true, false, false };
	SpellDatabase[FNV("UrgotE")] = { "linear", 1540, 475, 0.45, 100, 2, true, false, false, false, false, false, true };
	SpellDatabase[FNV("UrgotR")] = { "linear", 3200, 1600, 0.5, 80, 4, true, false, true, false, true, false, true };
	SpellDatabase[FNV("VarusQMissile")] = { "linear", 1900, 1525, 0, 70, 1, false, false, true, false, true, true, true };
	SpellDatabase[FNV("VarusE")] = { "circular", 1500, 925, 0.242, 260, 3, true, false, true, false, true, false, false };
	SpellDatabase[FNV("VarusR")] = { "linear", 1950, 1200, 0.25, 120, 4, true, false, true, false, true, false, true };
	SpellDatabase[FNV("VeigarBalefulStrike")] = { "linear", 2200, 900, 0.25, 70, 2, false, false, true, false, true, false, true };
	SpellDatabase[FNV("VeigarDarkMatterCastLockout")] = { "circular", FLT_MAX, 900, 1.221, 200, 1, false, false, false, false, false, false, false };
	//SpellDatabase[FNV("VeigarEventHorizon")] = { "circular", FLT_MAX, 725, 3.75, 400, 1, false, false, false, false, false, false, false };
	SpellDatabase[FNV("VelkozQMissileSplit")] = { "linear", 2100, 1100, 0, 45, 2, true, true, true, false, true, true, false };
	SpellDatabase[FNV("VelkozQ")] = { "linear", 1300, 1050, 0.25, 50, 1, true, true, true, false, true, false, true };
	SpellDatabase[FNV("VelkozW")] = { "linear", 1700, 1050, 0.25, 87.5, 1, false, false, true, false, true, false, true };
	SpellDatabase[FNV("VelkozE")] = { "circular", FLT_MAX, 800, 0.8, 185, 2, true, false, false, false, false, false, false };
	SpellDatabase[FNV("ViQ")] = { "linear", 1500, 725, 0, 90, 2, true, false, false, false, false, false, true };
	SpellDatabase[FNV("ViktorGravitonField")] = { "circular", FLT_MAX, 800, 1.75, 270, 1, true, false, false, false, false, false, false };
	SpellDatabase[FNV("ViktorDeathRayMissile")] = { "linear", 1050, 700, 0, 80, 2, false, false, true, false, true, true, true };
	SpellDatabase[FNV("ViktorEAugMissile")] = { "linear", 1050, 700, 0, 80, 2, false, false, true, false, true, true, true };
	SpellDatabase[FNV("WarwickR")] = { "linear", 1800, 3000, 0.1, 100, 4, true, false, false, false, false, false, true };
	SpellDatabase[FNV("XayahQ")] = { "linear", 2075, 1100, 0.5, 45, 1, false, false, true, false, true, false, true }; // XerathQ
	SpellDatabase[FNV("XerathQ")] = { "linear", FLT_MAX, 1400, 0.50, 80, 3, false, false, false, false, true, false, false };
	SpellDatabase[FNV("XerathArcaneBarrage2")] = { "circular", FLT_MAX, 1000, 0.75, 235, 3, true, false, false, false, false, false, false };
	SpellDatabase[FNV("XerathMageSpear")] = { "linear", 1400, 1050, 0.2, 60, 1, true, true, true, false, true, false, true }; //XerathMageSpear
	SpellDatabase[FNV("XerathLocusPulse")] = { "circular", FLT_MAX, 5000, 0.7, 200, 3, false, false, false, false, true, true, false };
	//SpellDatabase[FNV("XerathLocusOfPower2")] = { "circular", FLT_MAX, 5000, 0.7, 200, 3, false, false, false, false, true, true, false };
	SpellDatabase[FNV("XinZhaoW")] = { "linear", 5000, 900, 0.5, 40, 1, true, false, false, false, false, false, true };
	SpellDatabase[FNV("YasuoQ1")] = { "linear", FLT_MAX, 475, 0.339, 45, 2, true, false, true, false, true, true, false };
	SpellDatabase[FNV("YasuoQ2")] = { "linear", FLT_MAX, 475, 0.339, 45, 2, true, false, true, false, true, true, false };
	SpellDatabase[FNV("YasuoQ3")] = { "linear", 1200, 1000, 0.339, 90, 2, true, false, true, false, true, true, true };// delay 0.339 YasuoQ3Mis
	SpellDatabase[FNV("YasuoQ3Mis")] = { "linear", 1200, 1000, 0, 90, 2, true, false, true, false, true, true, true };// delay 0.339 YasuoQ3Mis
	SpellDatabase[FNV("ZacQ")] = { "linear", 2800, 800, 0.33, 120, 2, true, false, true, false, true, false, true };
	SpellDatabase[FNV("ZedQ")] = { "linear", 1700, 900, 0.25, 50, 1, false, false, true, true, true, true, true };
	SpellDatabase[FNV("ZiggsQSpell")] = { "circular", 1750, 850, 0.25, 75, 1, false, true, true, false, true, false, false }; //polygon
	SpellDatabase[FNV("ZiggsW")] = { "circular", 1750, 1000, 0.25, 240, 2, true, false, true, false, true, false, false };
	SpellDatabase[FNV("ZiggsE")] = { "circular", 1800, 900, 0.25, 250, 2, true, false, true, false, true, false, false };
	SpellDatabase[FNV("ZiggsR")] = { "circular", 1550, 5000, 0.375, 480, 4, false, false, false, false, true, false, false };
	SpellDatabase[FNV("ZileanQ")] = { "circular", FLT_MAX, 900, 0.8, 150, 2, true, false, true, false, true, false, false };
	SpellDatabase[FNV("ZoeQ")] = { "linear", 1200, 800, 0.25, 50, 1, false, true, true, false, true, true, true };
	SpellDatabase[FNV("ZoeQMis2")] = { "linear", 2500, 1600, 0, 70, 2, false, true, true, false, true, true, true };
	SpellDatabase[FNV("ZoeE")] = { "linear", 1700, 800, 0.3, 50, 2, true, true, true, false, true, false, true };
	SpellDatabase[FNV("ZyraQ")] = { "rectangular", FLT_MAX, 800, 0.825, 100, 1, false, false, false, false, false, false, false };
	SpellDatabase[FNV("ZyraE")] = { "linear", 1150, 1100, 0.25, 70, 1, true, false, true, false, true, false, true };
	SpellDatabase[FNV("ZyraR")] = { "circular", FLT_MAX, 700, 2, 500, 4, true, false, false, false, false, false, false };
	SpellDatabase[FNV("SeraphineQCast")] = { "circular", 1200, 900,0.25, 350, 1, false, false, false, false, false, false, false };
	SpellDatabase[FNV("SeraphineQCastEcho")] = { "circular", 1200, 900,0.25, 350, 1, false, false, false, false, false, false, false };
	SpellDatabase[FNV("SeraphineECast")] = { "linear", 1200, 1300, 0.25, 100, 1, false, false, true, false, true, false, true };
	SpellDatabase[FNV("SeraphineECastEcho")] = { "linear", 1200, 1300, 0.25, 100, 1, false, false, true, false, true, false, true };
	SpellDatabase[FNV("SeraphineR")] = { "linear", 1600, 1200, 0.5, 200, 5, true, false, true, false, true, false, true };
	SpellDatabase[FNV("YoneQ")] = { "linear", FLT_MAX, 475, 0.339, 45, 2, true, false, true, false, true, true, true };
	//SpellDatabase[FNV("YoneW")] = { "conic", FLT_MAX, 600, 0.375, 0, 2, false, false, true, false, false, false, true ,80 };
	SpellDatabase[FNV("YoneQ3")] = { "linear", 1500, 950, 0.339, 90, 2, true, false, true, false, true, true, true };// delay 0.339
	SpellDatabase[FNV("YoneR")] = { "linear", FLT_MAX, 1000, 0.75, 150, 2, true, false, true, false, true, true, false };// delay 0.339
	SpellDatabase[FNV("SamiraQ")] = { "linear", 2600, 1000, 0.25, 60, 1, true, false, true, false, true, true, true };// delay 0.339
	SpellDatabase[FNV("RellQ")] = { "linear", FLT_MAX, 700, 0.35, 80, 2, true, false, true, false, true, true, false };// delay 0.339

	SpellDatabase[FNV("ViegoQ")] = { "linear", FLT_MAX, 600, 0.35, 125, 2, true, false, true, false, true, true, false };// delay 0.339
	SpellDatabase[FNV("ViegoW")] = { "linear", 1000, 500, 0, 120, 2, true, false, true, false, true, true, false };// delay 0.339
	SpellDatabase[FNV("ViegoR")] = { "circular", FLT_MAX, 500,0.5, 300, 1, true, false, false, false, false, false, false };
	
	SpellDatabase[FNV("VexQ")] = { "linear", 3200, 1200, 0.75, 80, 2, true, false, true, false, true, true, true };// delay 0.339
	SpellDatabase[FNV("VexE")] = { "circular", 1000, 800, 0, 300, 2, true, false, true, false, true, true, false };// delay 0.339
	SpellDatabase[FNV("VexR")] = { "linear", 1600, 3000,0.25, 130, 5, true, false, false, false, false, false, false };
}
void PriorityChamp()
{
	/*priorities[FNV("aatrox")] = 3;
	priorities[FNV("akshan")] = 4;
	priorities[FNV("gwen")] = 3;
	priorities[FNV("ahri")] = 4;
	priorities[FNV("akali")] = 4;
	priorities[FNV("lillia")] = 4;
	priorities[FNV("alistar")] = 1;
	priorities[FNV("amumu")] = 1;
	priorities[FNV("anivia")] = 4;
	priorities[FNV("annie")] = 4;
	priorities[FNV("aphelios")] = 5;
	priorities[FNV("ashe")] = 5;
	priorities[FNV("aurelionsol")] = 4;
	priorities[FNV("azir")] = 4;
	priorities[FNV("bard")] = 3;
	priorities[FNV("blitzcrank")] = 1;
	priorities[FNV("brand")] = 4;
	priorities[FNV("braum")] = 1;
	priorities[FNV("caitlyn")] = 5;
	priorities[FNV("camille")] = 3;
	priorities[FNV("cassiopeia")] = 4;
	priorities[FNV("chogath")] = 1;
	priorities[FNV("corki")] = 5;
	priorities[FNV("darius")] = 2;
	priorities[FNV("diana")] = 4;
	priorities[FNV("drmundo")] = 1;
	priorities[FNV("draven")] = 5;
	priorities[FNV("ekko")] = 4;
	priorities[FNV("elise")] = 3;
	priorities[FNV("evelynn")] = 4;
	priorities[FNV("ezreal")] = 5;
	priorities[FNV("fiddlesticks")] = 3;
	priorities[FNV("fiora")] = 3;
	priorities[FNV("fizz")] = 4;
	priorities[FNV("galio")] = 1;
	priorities[FNV("gangplank")] = 4;
	priorities[FNV("garen")] = 1;
	priorities[FNV("gnar")] = 1;
	priorities[FNV("gragas")] = 2;
	priorities[FNV("graves")] = 4;
	priorities[FNV("hecarim")] = 2;
	priorities[FNV("heimerdinger")] = 3;
	priorities[FNV("illaoi")] = 3;
	priorities[FNV("irelia")] = 3;
	priorities[FNV("ivern")] = 1;
	priorities[FNV("janna")] = 2;
	priorities[FNV("jarvaniv")] = 3;
	priorities[FNV("jax")] = 3;
	priorities[FNV("jayce")] = 4;
	priorities[FNV("jhin")] = 5;
	priorities[FNV("jinx")] = 5;
	priorities[FNV("kaisa")] = 5;
	priorities[FNV("kalista")] = 5;
	priorities[FNV("karma")] = 4;
	priorities[FNV("karthus")] = 4;
	priorities[FNV("kassadin")] = 4;
	priorities[FNV("katarina")] = 4;
	priorities[FNV("kayle")] = 4;
	priorities[FNV("kayn")] = 4;
	priorities[FNV("kennen")] = 4;
	priorities[FNV("khazix")] = 4;
	priorities[FNV("kindred")] = 4;
	priorities[FNV("kled")] = 2;
	priorities[FNV("kogmaw")] = 5;
	priorities[FNV("leblanc")] = 4;
	priorities[FNV("leesin")] = 3;
	priorities[FNV("leona")] = 1;
	priorities[FNV("lissandra")] = 4;
	priorities[FNV("lucian")] = 5;
	priorities[FNV("lulu")] = 3;
	priorities[FNV("lux")] = 4;
	priorities[FNV("malphite")] = 1;
	priorities[FNV("malzahar")] = 3;
	priorities[FNV("maokai")] = 2;
	priorities[FNV("masteryi")] = 5;
	priorities[FNV("missfortune")] = 5;
	priorities[FNV("monkeyking")] = 3;
	priorities[FNV("mordekaiser")] = 4;
	priorities[FNV("morgana")] = 3;
	priorities[FNV("nami")] = 3;
	priorities[FNV("nasus")] = 2;
	priorities[FNV("nautilus")] = 1;
	priorities[FNV("neeko")] = 4;
	priorities[FNV("nidalee")] = 4;
	priorities[FNV("nocturne")] = 4;
	priorities[FNV("nunu")] = 2;
	priorities[FNV("olaf")] = 2;
	priorities[FNV("orianna")] = 4;
	priorities[FNV("ornn")] = 2;
	priorities[FNV("pantheon")] = 3;
	priorities[FNV("poppy")] = 2;
	priorities[FNV("pyke")] = 5;
	priorities[FNV("qiyana")] = 4;
	priorities[FNV("quinn")] = 5;
	priorities[FNV("rakan")] = 3;
	priorities[FNV("rammus")] = 1;
	priorities[FNV("reksai")] = 2;
	priorities[FNV("renekton")] = 2;
	priorities[FNV("rengar")] = 4;
	priorities[FNV("riven")] = 4;
	priorities[FNV("rumble")] = 4;
	priorities[FNV("renata")] = 3;
	priorities[FNV("ryze")] = 4;
	priorities[FNV("sejuani")] = 2;
	priorities[FNV("senna")] = 3;
	priorities[FNV("sett")] = 3;
	priorities[FNV("shaco")] = 4;
	priorities[FNV("shaco")] = 4;
	priorities[FNV("samira")] = 5;
	priorities[FNV("shyvana")] = 2;
	priorities[FNV("singed")] = 1;
	priorities[FNV("sion")] = 1;
	priorities[FNV("sivir")] = 5;
	priorities[FNV("skarner")] = 2;
	priorities[FNV("sona")] = 3;
	priorities[FNV("soraka")] = 3;
	priorities[FNV("swain")] = 3;
	priorities[FNV("sylas")] = 4;
	priorities[FNV("tahmkench")] = 1;
	priorities[FNV("taliyah")] = 4;
	priorities[FNV("talon")] = 4;
	priorities[FNV("taric")] = 1;
	priorities[FNV("teemo")] = 4;
	priorities[FNV("thresh")] = 1;
	priorities[FNV("tristana")] = 5;
	priorities[FNV("trundle")] = 2;
	priorities[FNV("tryndamere")] = 4;
	priorities[FNV("twistedfate")] = 4;
	priorities[FNV("twitch")] = 5;
	priorities[FNV("udyr")] = 2;
	priorities[FNV("urgot")] = 2;
	priorities[FNV("varus")] = 5;
	priorities[FNV("vayne")] = 5;
	priorities[FNV("veigar")] = 4;
	priorities[FNV("velkoz")] = 4;
	priorities[FNV("vi")] = 2;
	priorities[FNV("vex")] = 4;
	priorities[FNV("viego")] = 3;
	priorities[FNV("viktor")] = 4;
	priorities[FNV("vladimir")] = 3;
	priorities[FNV("volibear")] = 2;
	priorities[FNV("warwick")] = 2;
	priorities[FNV("xayah")] = 5;
	priorities[FNV("xerath")] = 4;
	priorities[FNV("xinzhao")] = 3;
	priorities[FNV("yasuo")] = 4;
	priorities[FNV("yone")] = 4;
	priorities[FNV("yorick")] = 2;
	priorities[FNV("yuumi")] = 2;
	priorities[FNV("zac")] = 1;
	priorities[FNV("zed")] = 4;
	priorities[FNV("ziggs")] = 4;
	priorities[FNV("zilean")] = 3;
	priorities[FNV("zoe")] = 4;
	priorities[FNV("zyra")] = 2;
	priorities[FNV("zeri")] = 5;*/
}


std::unordered_map<DWORD, DWORD> Missiles;
std::unordered_map<DWORD, ActiveAttackstruct> ActiveAttacks;
std::unordered_map<std::string, std::vector<uint8_t>> ChampionImage;

BYTE effect[] = { 0x1, 0x9, 0xff, 0xfe, 0x54, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x11, 0x0, 0x0, 0x0, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x0, 0x0, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0xa4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6, 0x0, 0x0, 0x0, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x0, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xfc, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6, 0x0, 0x0, 0x0, 0x57, 0x69, 0x64, 0x74, 0x68, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x28, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x46, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x54, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5a, 0x0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa, 0x0, 0x0, 0x0, 0x61, 0x6e, 0x74, 0x69, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x6, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x5, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x10, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0xf, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x50, 0x30, 0x0, 0x0, 0x5, 0x0, 0x0, 0x0, 0x4d, 0x61, 0x69, 0x6e, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x78, 0x0, 0x0, 0x0, 0x94, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb0, 0x0, 0x0, 0x0, 0xcc, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xdc, 0x0, 0x0, 0x0, 0xf8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x1, 0x0, 0x0, 0x24, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x34, 0x1, 0x0, 0x0, 0x50, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x1, 0x0, 0x0, 0x7c, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x40, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x94, 0x1, 0x0, 0x0, 0x90, 0x1, 0x0, 0x0, 0xd, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb4, 0x1, 0x0, 0x0, 0xb0, 0x1, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd4, 0x1, 0x0, 0x0, 0xd0, 0x1, 0x0, 0x0, 0x6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf4, 0x1, 0x0, 0x0, 0xf0, 0x1, 0x0, 0x0, 0x92, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x14, 0x2, 0x0, 0x0, 0x10, 0x2, 0x0, 0x0, 0x93, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2c, 0x2, 0x0, 0x0, 0x28, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xff, 0xff, 0x5, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe4, 0x5, 0x0, 0x0, 0x0, 0x2, 0xff, 0xff, 0xfe, 0xff, 0x3b, 0x0, 0x43, 0x54, 0x41, 0x42, 0x1c, 0x0, 0x0, 0x0, 0xb7, 0x0, 0x0, 0x0, 0x0, 0x2, 0xff, 0xff, 0x3, 0x0, 0x0, 0x0, 0x1c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0xb0, 0x0, 0x0, 0x0, 0x58, 0x0, 0x0, 0x0, 0x2, 0x0, 0x6, 0x0, 0x1, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, 0x0, 0x70, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x2, 0x0, 0x8, 0x0, 0x1, 0x0, 0x0, 0x0, 0x88, 0x0, 0x0, 0x0, 0x70, 0x0, 0x0, 0x0, 0x98, 0x0, 0x0, 0x0, 0x2, 0x0, 0x7, 0x0, 0x1, 0x0, 0x0, 0x0, 0xa0, 0x0, 0x0, 0x0, 0x70, 0x0, 0x0, 0x0, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x0, 0xab, 0xab, 0x1, 0x0, 0x3, 0x0, 0x1, 0x0, 0x4, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x0, 0xab, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x0, 0xab, 0x0, 0x0, 0x3, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x73, 0x5f, 0x32, 0x5f, 0x30, 0x0, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x20, 0x28, 0x52, 0x29, 0x20, 0x48, 0x4c, 0x53, 0x4c, 0x20, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x20, 0x39, 0x2e, 0x32, 0x39, 0x2e, 0x39, 0x35, 0x32, 0x2e, 0x33, 0x31, 0x31, 0x31, 0x0, 0xfe, 0xff, 0xd3, 0x0, 0x50, 0x52, 0x45, 0x53, 0x1, 0x2, 0x58, 0x46, 0xfe, 0xff, 0x46, 0x0, 0x43, 0x54, 0x41, 0x42, 0x1c, 0x0, 0x0, 0x0, 0xe3, 0x0, 0x0, 0x0, 0x1, 0x2, 0x58, 0x46, 0x4, 0x0, 0x0, 0x0, 0x1c, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x20, 0xe0, 0x0, 0x0, 0x0, 0x6c, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x74, 0x0, 0x0, 0x0, 0x84, 0x0, 0x0, 0x0, 0x94, 0x0, 0x0, 0x0, 0x2, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x9c, 0x0, 0x0, 0x0, 0x84, 0x0, 0x0, 0x0, 0xac, 0x0, 0x0, 0x0, 0x2, 0x0, 0x2, 0x0, 0x1, 0x0, 0x0, 0x0, 0xb4, 0x0, 0x0, 0x0, 0x84, 0x0, 0x0, 0x0, 0xc4, 0x0, 0x0, 0x0, 0x2, 0x0, 0x3, 0x0, 0x1, 0x0, 0x0, 0x0, 0xd0, 0x0, 0x0, 0x0, 0x84, 0x0, 0x0, 0x0, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x0, 0xab, 0xab, 0x1, 0x0, 0x3, 0x0, 0x1, 0x0, 0x4, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x0, 0xab, 0x0, 0x0, 0x3, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x57, 0x69, 0x64, 0x74, 0x68, 0x0, 0xab, 0xab, 0x0, 0x0, 0x3, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x6e, 0x74, 0x69, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x0, 0xab, 0xab, 0x0, 0x0, 0x3, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x74, 0x78, 0x0, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x20, 0x28, 0x52, 0x29, 0x20, 0x48, 0x4c, 0x53, 0x4c, 0x20, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x20, 0x39, 0x2e, 0x32, 0x39, 0x2e, 0x39, 0x35, 0x32, 0x2e, 0x33, 0x31, 0x31, 0x31, 0x0, 0xfe, 0xff, 0xc, 0x0, 0x50, 0x52, 0x53, 0x49, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xfe, 0xff, 0x2a, 0x0, 0x43, 0x4c, 0x49, 0x54, 0x14, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xfe, 0xff, 0x50, 0x0, 0x46, 0x58, 0x4c, 0x43, 0x8, 0x0, 0x0, 0x0, 0x1, 0x0, 0x50, 0xa0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x40, 0xa0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x1, 0x0, 0x40, 0xa0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0xc, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x10, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x1, 0x0, 0x40, 0xa0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0xc, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0xc, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x10, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x1, 0x0, 0x30, 0x10, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0xc, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x10, 0x0, 0x0, 0x0, 0x3, 0x0, 0x0, 0x10, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x14, 0x0, 0x0, 0x0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf, 0xf, 0xf, 0xf, 0xff, 0xff, 0x0, 0x0, 0x51, 0x0, 0x0, 0x5, 0x9, 0x0, 0xf, 0xa0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x80, 0xbf, 0x0, 0x0, 0x0, 0x0, 0x1f, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x7, 0xb0, 0x5, 0x0, 0x0, 0x3, 0x0, 0x0, 0x8, 0x80, 0x0, 0x0, 0xaa, 0xb0, 0x0, 0x0, 0xaa, 0xb0, 0x4, 0x0, 0x0, 0x4, 0x0, 0x0, 0x1, 0x80, 0x0, 0x0, 0x0, 0xb0, 0x0, 0x0, 0x0, 0xb0, 0x0, 0x0, 0xff, 0x80, 0x7, 0x0, 0x0, 0x2, 0x0, 0x0, 0x1, 0x80, 0x0, 0x0, 0x0, 0x80, 0x6, 0x0, 0x0, 0x2, 0x0, 0x0, 0x1, 0x80, 0x0, 0x0, 0x0, 0x80, 0x2, 0x0, 0x0, 0x3, 0x0, 0x0, 0x2, 0x80, 0x0, 0x0, 0x0, 0x81, 0x7, 0x0, 0x0, 0xa0, 0x23, 0x0, 0x0, 0x2, 0x0, 0x0, 0x2, 0x80, 0x0, 0x0, 0x55, 0x80, 0x2, 0x0, 0x0, 0x3, 0x0, 0x0, 0x4, 0x80, 0x0, 0x0, 0x55, 0x81, 0x3, 0x0, 0x0, 0xa0, 0x5, 0x0, 0x0, 0x3, 0x0, 0x0, 0x4, 0x80, 0x0, 0x0, 0xaa, 0x80, 0x4, 0x0, 0x0, 0xa0, 0x5, 0x0, 0x0, 0x3, 0x0, 0x0, 0x4, 0x80, 0x0, 0x0, 0xaa, 0x80, 0x6, 0x0, 0xff, 0xa0, 0x2, 0x0, 0x0, 0x3, 0x0, 0x0, 0x8, 0x80, 0x0, 0x0, 0x55, 0x80, 0x3, 0x0, 0x0, 0xa1, 0x2, 0x0, 0x0, 0x3, 0x0, 0x0, 0x2, 0x80, 0x0, 0x0, 0x55, 0x80, 0x2, 0x0, 0x0, 0xa1, 0x58, 0x0, 0x0, 0x4, 0x0, 0x0, 0x2, 0x80, 0x0, 0x0, 0x55, 0x80, 0x9, 0x0, 0x55, 0xa0, 0x9, 0x0, 0xaa, 0xa0, 0x1, 0x0, 0x0, 0x2, 0x1, 0x0, 0x8, 0x80, 0x9, 0x0, 0x55, 0xa0, 0x58, 0x0, 0x0, 0x4, 0x0, 0x0, 0x2, 0x80, 0x8, 0x0, 0x0, 0xa1, 0x0, 0x0, 0x55, 0x80, 0x1, 0x0, 0xff, 0x80, 0x58, 0x0, 0x0, 0x4, 0x0, 0x0, 0x4, 0x80, 0x0, 0x0, 0xff, 0x80, 0x9, 0x0, 0x0, 0xa0, 0x0, 0x0, 0xaa, 0x80, 0x58, 0x0, 0x0, 0x4, 0x0, 0x0, 0x2, 0x80, 0x0, 0x0, 0x55, 0x80, 0x0, 0x0, 0xaa, 0x80, 0x6, 0x0, 0xff, 0xa0, 0x2, 0x0, 0x0, 0x3, 0x0, 0x0, 0x4, 0x80, 0x0, 0x0, 0x0, 0x80, 0x1, 0x0, 0x0, 0xa1, 0x2, 0x0, 0x0, 0x3, 0x0, 0x0, 0x1, 0x80, 0x0, 0x0, 0x0, 0x81, 0x0, 0x0, 0x0, 0xa0, 0x58, 0x0, 0x0, 0x4, 0x0, 0x0, 0x4, 0x80, 0x0, 0x0, 0xaa, 0x80, 0x1, 0x0, 0xff, 0x80, 0x8, 0x0, 0x0, 0xa1, 0x58, 0x0, 0x0, 0x4, 0x0, 0x0, 0x2, 0x80, 0x0, 0x0, 0xaa, 0x80, 0x0, 0x0, 0x55, 0x80, 0x6, 0x0, 0xff, 0xa0, 0x58, 0x0, 0x0, 0x4, 0x0, 0x0, 0x8, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x55, 0x80, 0x9, 0x0, 0x0, 0xa0, 0x1, 0x0, 0x0, 0x2, 0x0, 0x0, 0x7, 0x80, 0x5, 0x0, 0xe4, 0xa0, 0x1, 0x0, 0x0, 0x2, 0x0, 0x8, 0xf, 0x80, 0x0, 0x0, 0xe4, 0x80, 0xff, 0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xff, 0xff, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58, 0x1, 0x0, 0x0, 0x0, 0x2, 0xfe, 0xff, 0xfe, 0xff, 0x34, 0x0, 0x43, 0x54, 0x41, 0x42, 0x1c, 0x0, 0x0, 0x0, 0x9b, 0x0, 0x0, 0x0, 0x0, 0x2, 0xfe, 0xff, 0x1, 0x0, 0x0, 0x0, 0x1c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x94, 0x0, 0x0, 0x0, 0x30, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x44, 0x0, 0x0, 0x0, 0x54, 0x0, 0x0, 0x0, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x0, 0xab, 0xab, 0xab, 0x3, 0x0, 0x3, 0x0, 0x4, 0x0, 0x4, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x76, 0x73, 0x5f, 0x32, 0x5f, 0x30, 0x0, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x20, 0x28, 0x52, 0x29, 0x20, 0x48, 0x4c, 0x53, 0x4c, 0x20, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x20, 0x39, 0x2e, 0x32, 0x39, 0x2e, 0x39, 0x35, 0x32, 0x2e, 0x33, 0x31, 0x31, 0x31, 0x0, 0x51, 0x0, 0x0, 0x5, 0x4, 0x0, 0xf, 0xa0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1f, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0xf, 0x90, 0x9, 0x0, 0x0, 0x3, 0x0, 0x0, 0x1, 0xc0, 0x0, 0x0, 0xe4, 0x90, 0x0, 0x0, 0xe4, 0xa0, 0x9, 0x0, 0x0, 0x3, 0x0, 0x0, 0x2, 0xc0, 0x0, 0x0, 0xe4, 0x90, 0x1, 0x0, 0xe4, 0xa0, 0x9, 0x0, 0x0, 0x3, 0x0, 0x0, 0x4, 0xc0, 0x0, 0x0, 0xe4, 0x90, 0x2, 0x0, 0xe4, 0xa0, 0x9, 0x0, 0x0, 0x3, 0x0, 0x0, 0x8, 0xc0, 0x0, 0x0, 0xe4, 0x90, 0x3, 0x0, 0xe4, 0xa0, 0x1, 0x0, 0x0, 0x2, 0x0, 0x0, 0xf, 0xd0, 0x4, 0x0, 0x0, 0xa0, 0x1, 0x0, 0x0, 0x2, 0x0, 0x0, 0xf, 0xe0, 0x0, 0x0, 0xe4, 0x90, 0xff, 0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xff, 0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xdc, 0x0, 0x0, 0x0, 0x0, 0x2, 0x58, 0x46, 0xfe, 0xff, 0x24, 0x0, 0x43, 0x54, 0x41, 0x42, 0x1c, 0x0, 0x0, 0x0, 0x5b, 0x0, 0x0, 0x0, 0x0, 0x2, 0x58, 0x46, 0x1, 0x0, 0x0, 0x0, 0x1c, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x20, 0x58, 0x0, 0x0, 0x0, 0x30, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x38, 0x0, 0x0, 0x0, 0x48, 0x0, 0x0, 0x0, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5a, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x74, 0x78, 0x0, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x20, 0x28, 0x52, 0x29, 0x20, 0x48, 0x4c, 0x53, 0x4c, 0x20, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x20, 0x39, 0x2e, 0x32, 0x39, 0x2e, 0x39, 0x35, 0x32, 0x2e, 0x33, 0x31, 0x31, 0x31, 0x0, 0xfe, 0xff, 0x2, 0x0, 0x43, 0x4c, 0x49, 0x54, 0x0, 0x0, 0x0, 0x0, 0xfe, 0xff, 0xc, 0x0, 0x46, 0x58, 0x4c, 0x43, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x10, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf, 0xf, 0xf, 0xf, 0xff, 0xff, 0x0, 0x0 };

//BYTE effect[] = { 1,
//		9,
//		255,
//		254,
//		84,
//		2,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		3,
//		0,
//		0,
//		0,
//		2,
//		0,
//		0,
//		0,
//		96,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		4,
//		0,
//		0,
//		0,
//		4,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		17,
//		0,
//		0,
//		0,
//		80,
//		114,
//		111,
//		106,
//		101,
//		99,
//		116,
//		105,
//		111,
//		110,
//		77,
//		97,
//		116,
//		114,
//		105,
//		120,
//		0,
//		0,
//		0,
//		0,
//		3,
//		0,
//		0,
//		0,
//		1,
//		0,
//		0,
//		0,
//		164,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		4,
//		0,
//		0,
//		0,
//		1,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		6,
//		0,
//		0,
//		0,
//		67,
//		111,
//		108,
//		111,
//		114,
//		0,
//		0,
//		0,
//		3,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		208,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		1,
//		0,
//		0,
//		0,
//		1,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		7,
//		0,
//		0,
//		0,
//		82,
//		97,
//		100,
//		105,
//		117,
//		115,
//		0,
//		0,
//		3,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		252,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		1,
//		0,
//		0,
//		0,
//		1,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		6,
//		0,
//		0,
//		0,
//		87,
//		105,
//		100,
//		116,
//		104,
//		0,
//		0,
//		0,
//		1,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		40,
//		1,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		1,
//		0,
//		0,
//		0,
//		1,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		7,
//		0,
//		0,
//		0,
//		70,
//		105,
//		108,
//		108,
//		101,
//		100,
//		0,
//		0,
//		1,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		84,
//		1,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		1,
//		0,
//		0,
//		0,
//		1,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		8,
//		0,
//		0,
//		0,
//		69,
//		110,
//		97,
//		98,
//		108,
//		101,
//		90,
//		0,
//		3,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		128,
//		1,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		1,
//		0,
//		0,
//		0,
//		1,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		10,
//		0,
//		0,
//		0,
//		97,
//		110,
//		116,
//		105,
//		65,
//		108,
//		105,
//		97,
//		115,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		1,
//		0,
//		0,
//		0,
//		2,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		1,
//		0,
//		0,
//		0,
//		1,
//		0,
//		0,
//		0,
//		1,
//		0,
//		0,
//		0,
//		2,
//		0,
//		0,
//		0,
//		2,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		1,
//		0,
//		0,
//		0,
//		1,
//		0,
//		0,
//		0,
//		6,
//		0,
//		0,
//		0,
//		2,
//		0,
//		0,
//		0,
//		2,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		1,
//		0,
//		0,
//		0,
//		1,
//		0,
//		0,
//		0,
//		5,
//		0,
//		0,
//		0,
//		2,
//		0,
//		0,
//		0,
//		2,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		1,
//		0,
//		0,
//		0,
//		1,
//		0,
//		0,
//		0,
//		1,
//		0,
//		0,
//		0,
//		16,
//		0,
//		0,
//		0,
//		4,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		2,
//		0,
//		0,
//		0,
//		15,
//		0,
//		0,
//		0,
//		4,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		3,
//		0,
//		0,
//		0,
//		80,
//		48,
//		0,
//		0,
//		5,
//		0,
//		0,
//		0,
//		77,
//		97,
//		105,
//		110,
//		0,
//		0,
//		0,
//		0,
//		7,
//		0,
//		0,
//		0,
//		1,
//		0,
//		0,
//		0,
//		3,
//		0,
//		0,
//		0,
//		3,
//		0,
//		0,
//		0,
//		4,
//		0,
//		0,
//		0,
//		32,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		120,
//		0,
//		0,
//		0,
//		148,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		176,
//		0,
//		0,
//		0,
//		204,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		220,
//		0,
//		0,
//		0,
//		248,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		8,
//		1,
//		0,
//		0,
//		36,
//		1,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		52,
//		1,
//		0,
//		0,
//		80,
//		1,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		96,
//		1,
//		0,
//		0,
//		124,
//		1,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		72,
//		2,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		1,
//		0,
//		0,
//		0,
//		64,
//		2,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		6,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		148,
//		1,
//		0,
//		0,
//		144,
//		1,
//		0,
//		0,
//		13,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		180,
//		1,
//		0,
//		0,
//		176,
//		1,
//		0,
//		0,
//		7,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		212,
//		1,
//		0,
//		0,
//		208,
//		1,
//		0,
//		0,
//		6,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		244,
//		1,
//		0,
//		0,
//		240,
//		1,
//		0,
//		0,
//		146,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		20,
//		2,
//		0,
//		0,
//		16,
//		2,
//		0,
//		0,
//		147,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		44,
//		2,
//		0,
//		0,
//		40,
//		2,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		3,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		255,
//		255,
//		255,
//		255,
//		5,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		228,
//		5,
//		0,
//		0,
//		0,
//		2,
//		255,
//		255,
//		254,
//		255,
//		59,
//		0,
//		67,
//		84,
//		65,
//		66,
//		28,
//		0,
//		0,
//		0,
//		183,
//		0,
//		0,
//		0,
//		0,
//		2,
//		255,
//		255,
//		3,
//		0,
//		0,
//		0,
//		28,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		32,
//		176,
//		0,
//		0,
//		0,
//		88,
//		0,
//		0,
//		0,
//		2,
//		0,
//		6,
//		0,
//		1,
//		0,
//		0,
//		0,
//		96,
//		0,
//		0,
//		0,
//		112,
//		0,
//		0,
//		0,
//		128,
//		0,
//		0,
//		0,
//		2,
//		0,
//		8,
//		0,
//		1,
//		0,
//		0,
//		0,
//		136,
//		0,
//		0,
//		0,
//		112,
//		0,
//		0,
//		0,
//		152,
//		0,
//		0,
//		0,
//		2,
//		0,
//		7,
//		0,
//		1,
//		0,
//		0,
//		0,
//		160,
//		0,
//		0,
//		0,
//		112,
//		0,
//		0,
//		0,
//		67,
//		111,
//		108,
//		111,
//		114,
//		0,
//		171,
//		171,
//		1,
//		0,
//		3,
//		0,
//		1,
//		0,
//		4,
//		0,
//		1,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		70,
//		105,
//		108,
//		108,
//		101,
//		100,
//		0,
//		171,
//		0,
//		0,
//		1,
//		0,
//		1,
//		0,
//		1,
//		0,
//		1,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		82,
//		97,
//		100,
//		105,
//		117,
//		115,
//		0,
//		171,
//		0,
//		0,
//		3,
//		0,
//		1,
//		0,
//		1,
//		0,
//		1,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		112,
//		115,
//		95,
//		50,
//		95,
//		48,
//		0,
//		77,
//		105,
//		99,
//		114,
//		111,
//		115,
//		111,
//		102,
//		116,
//		32,
//		40,
//		82,
//		41,
//		32,
//		72,
//		76,
//		83,
//		76,
//		32,
//		83,
//		104,
//		97,
//		100,
//		101,
//		114,
//		32,
//		67,
//		111,
//		109,
//		112,
//		105,
//		108,
//		101,
//		114,
//		32,
//		57,
//		46,
//		50,
//		57,
//		46,
//		57,
//		53,
//		50,
//		46,
//		51,
//		49,
//		49,
//		49,
//		0,
//		254,
//		255,
//		211,
//		0,
//		80,
//		82,
//		69,
//		83,
//		1,
//		2,
//		88,
//		70,
//		254,
//		255,
//		70,
//		0,
//		67,
//		84,
//		65,
//		66,
//		28,
//		0,
//		0,
//		0,
//		227,
//		0,
//		0,
//		0,
//		1,
//		2,
//		88,
//		70,
//		4,
//		0,
//		0,
//		0,
//		28,
//		0,
//		0,
//		0,
//		0,
//		1,
//		0,
//		32,
//		224,
//		0,
//		0,
//		0,
//		108,
//		0,
//		0,
//		0,
//		2,
//		0,
//		0,
//		0,
//		1,
//		0,
//		0,
//		0,
//		116,
//		0,
//		0,
//		0,
//		132,
//		0,
//		0,
//		0,
//		148,
//		0,
//		0,
//		0,
//		2,
//		0,
//		1,
//		0,
//		1,
//		0,
//		0,
//		0,
//		156,
//		0,
//		0,
//		0,
//		132,
//		0,
//		0,
//		0,
//		172,
//		0,
//		0,
//		0,
//		2,
//		0,
//		2,
//		0,
//		1,
//		0,
//		0,
//		0,
//		180,
//		0,
//		0,
//		0,
//		132,
//		0,
//		0,
//		0,
//		196,
//		0,
//		0,
//		0,
//		2,
//		0,
//		3,
//		0,
//		1,
//		0,
//		0,
//		0,
//		208,
//		0,
//		0,
//		0,
//		132,
//		0,
//		0,
//		0,
//		67,
//		111,
//		108,
//		111,
//		114,
//		0,
//		171,
//		171,
//		1,
//		0,
//		3,
//		0,
//		1,
//		0,
//		4,
//		0,
//		1,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		82,
//		97,
//		100,
//		105,
//		117,
//		115,
//		0,
//		171,
//		0,
//		0,
//		3,
//		0,
//		1,
//		0,
//		1,
//		0,
//		1,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		87,
//		105,
//		100,
//		116,
//		104,
//		0,
//		171,
//		171,
//		0,
//		0,
//		3,
//		0,
//		1,
//		0,
//		1,
//		0,
//		1,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		97,
//		110,
//		116,
//		105,
//		65,
//		108,
//		105,
//		97,
//		115,
//		0,
//		171,
//		171,
//		0,
//		0,
//		3,
//		0,
//		1,
//		0,
//		1,
//		0,
//		1,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		116,
//		120,
//		0,
//		77,
//		105,
//		99,
//		114,
//		111,
//		115,
//		111,
//		102,
//		116,
//		32,
//		40,
//		82,
//		41,
//		32,
//		72,
//		76,
//		83,
//		76,
//		32,
//		83,
//		104,
//		97,
//		100,
//		101,
//		114,
//		32,
//		67,
//		111,
//		109,
//		112,
//		105,
//		108,
//		101,
//		114,
//		32,
//		57,
//		46,
//		50,
//		57,
//		46,
//		57,
//		53,
//		50,
//		46,
//		51,
//		49,
//		49,
//		49,
//		0,
//		254,
//		255,
//		12,
//		0,
//		80,
//		82,
//		83,
//		73,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		6,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		1,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		6,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		254,
//		255,
//		42,
//		0,
//		67,
//		76,
//		73,
//		84,
//		20,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		224,
//		63,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		254,
//		255,
//		80,
//		0,
//		70,
//		88,
//		76,
//		67,
//		8,
//		0,
//		0,
//		0,
//		1,
//		0,
//		80,
//		160,
//		2,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		2,
//		0,
//		0,
//		0,
//		8,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		1,
//		0,
//		0,
//		0,
//		16,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		7,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		1,
//		0,
//		64,
//		160,
//		2,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		7,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		2,
//		0,
//		0,
//		0,
//		4,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		7,
//		0,
//		0,
//		0,
//		4,
//		0,
//		0,
//		0,
//		1,
//		0,
//		64,
//		160,
//		2,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		7,
//		0,
//		0,
//		0,
//		4,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		2,
//		0,
//		0,
//		0,
//		12,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		4,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		1,
//		0,
//		0,
//		16,
//		1,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		7,
//		0,
//		0,
//		0,
//		4,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		4,
//		0,
//		0,
//		0,
//		4,
//		0,
//		0,
//		0,
//		1,
//		0,
//		64,
//		160,
//		2,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		7,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		2,
//		0,
//		0,
//		0,
//		12,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		4,
//		0,
//		0,
//		0,
//		12,
//		0,
//		0,
//		0,
//		1,
//		0,
//		0,
//		16,
//		1,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		7,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		4,
//		0,
//		0,
//		0,
//		8,
//		0,
//		0,
//		0,
//		1,
//		0,
//		48,
//		16,
//		1,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		2,
//		0,
//		0,
//		0,
//		12,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		4,
//		0,
//		0,
//		0,
//		16,
//		0,
//		0,
//		0,
//		3,
//		0,
//		0,
//		16,
//		1,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		2,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		4,
//		0,
//		0,
//		0,
//		20,
//		0,
//		0,
//		0,
//		240,
//		240,
//		240,
//		240,
//		15,
//		15,
//		15,
//		15,
//		255,
//		255,
//		0,
//		0,
//		81,
//		0,
//		0,
//		5,
//		9,
//		0,
//		15,
//		160,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		128,
//		0,
//		0,
//		128,
//		191,
//		0,
//		0,
//		0,
//		0,
//		31,
//		0,
//		0,
//		2,
//		0,
//		0,
//		0,
//		128,
//		0,
//		0,
//		7,
//		176,
//		5,
//		0,
//		0,
//		3,
//		0,
//		0,
//		8,
//		128,
//		0,
//		0,
//		170,
//		176,
//		0,
//		0,
//		170,
//		176,
//		4,
//		0,
//		0,
//		4,
//		0,
//		0,
//		1,
//		128,
//		0,
//		0,
//		0,
//		176,
//		0,
//		0,
//		0,
//		176,
//		0,
//		0,
//		255,
//		128,
//		7,
//		0,
//		0,
//		2,
//		0,
//		0,
//		1,
//		128,
//		0,
//		0,
//		0,
//		128,
//		6,
//		0,
//		0,
//		2,
//		0,
//		0,
//		1,
//		128,
//		0,
//		0,
//		0,
//		128,
//		2,
//		0,
//		0,
//		3,
//		0,
//		0,
//		2,
//		128,
//		0,
//		0,
//		0,
//		129,
//		7,
//		0,
//		0,
//		160,
//		35,
//		0,
//		0,
//		2,
//		0,
//		0,
//		2,
//		128,
//		0,
//		0,
//		85,
//		128,
//		2,
//		0,
//		0,
//		3,
//		0,
//		0,
//		4,
//		128,
//		0,
//		0,
//		85,
//		129,
//		3,
//		0,
//		0,
//		160,
//		5,
//		0,
//		0,
//		3,
//		0,
//		0,
//		4,
//		128,
//		0,
//		0,
//		170,
//		128,
//		4,
//		0,
//		0,
//		160,
//		5,
//		0,
//		0,
//		3,
//		0,
//		0,
//		4,
//		128,
//		0,
//		0,
//		170,
//		128,
//		6,
//		0,
//		255,
//		160,
//		2,
//		0,
//		0,
//		3,
//		0,
//		0,
//		8,
//		128,
//		0,
//		0,
//		85,
//		128,
//		3,
//		0,
//		0,
//		161,
//		2,
//		0,
//		0,
//		3,
//		0,
//		0,
//		2,
//		128,
//		0,
//		0,
//		85,
//		128,
//		2,
//		0,
//		0,
//		161,
//		88,
//		0,
//		0,
//		4,
//		0,
//		0,
//		2,
//		128,
//		0,
//		0,
//		85,
//		128,
//		9,
//		0,
//		85,
//		160,
//		9,
//		0,
//		170,
//		160,
//		1,
//		0,
//		0,
//		2,
//		1,
//		0,
//		8,
//		128,
//		9,
//		0,
//		85,
//		160,
//		88,
//		0,
//		0,
//		4,
//		0,
//		0,
//		2,
//		128,
//		8,
//		0,
//		0,
//		161,
//		0,
//		0,
//		85,
//		128,
//		1,
//		0,
//		255,
//		128,
//		88,
//		0,
//		0,
//		4,
//		0,
//		0,
//		4,
//		128,
//		0,
//		0,
//		255,
//		128,
//		9,
//		0,
//		0,
//		160,
//		0,
//		0,
//		170,
//		128,
//		88,
//		0,
//		0,
//		4,
//		0,
//		0,
//		2,
//		128,
//		0,
//		0,
//		85,
//		128,
//		0,
//		0,
//		170,
//		128,
//		6,
//		0,
//		255,
//		160,
//		2,
//		0,
//		0,
//		3,
//		0,
//		0,
//		4,
//		128,
//		0,
//		0,
//		0,
//		128,
//		1,
//		0,
//		0,
//		161,
//		2,
//		0,
//		0,
//		3,
//		0,
//		0,
//		1,
//		128,
//		0,
//		0,
//		0,
//		129,
//		0,
//		0,
//		0,
//		160,
//		88,
//		0,
//		0,
//		4,
//		0,
//		0,
//		4,
//		128,
//		0,
//		0,
//		170,
//		128,
//		1,
//		0,
//		255,
//		128,
//		8,
//		0,
//		0,
//		161,
//		88,
//		0,
//		0,
//		4,
//		0,
//		0,
//		2,
//		128,
//		0,
//		0,
//		170,
//		128,
//		0,
//		0,
//		85,
//		128,
//		6,
//		0,
//		255,
//		160,
//		88,
//		0,
//		0,
//		4,
//		0,
//		0,
//		8,
//		128,
//		0,
//		0,
//		0,
//		128,
//		0,
//		0,
//		85,
//		128,
//		9,
//		0,
//		0,
//		160,
//		1,
//		0,
//		0,
//		2,
//		0,
//		0,
//		7,
//		128,
//		5,
//		0,
//		228,
//		160,
//		1,
//		0,
//		0,
//		2,
//		0,
//		8,
//		15,
//		128,
//		0,
//		0,
//		228,
//		128,
//		255,
//		255,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		255,
//		255,
//		255,
//		255,
//		4,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		88,
//		1,
//		0,
//		0,
//		0,
//		2,
//		254,
//		255,
//		254,
//		255,
//		52,
//		0,
//		67,
//		84,
//		65,
//		66,
//		28,
//		0,
//		0,
//		0,
//		155,
//		0,
//		0,
//		0,
//		0,
//		2,
//		254,
//		255,
//		1,
//		0,
//		0,
//		0,
//		28,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		32,
//		148,
//		0,
//		0,
//		0,
//		48,
//		0,
//		0,
//		0,
//		2,
//		0,
//		0,
//		0,
//		4,
//		0,
//		0,
//		0,
//		68,
//		0,
//		0,
//		0,
//		84,
//		0,
//		0,
//		0,
//		80,
//		114,
//		111,
//		106,
//		101,
//		99,
//		116,
//		105,
//		111,
//		110,
//		77,
//		97,
//		116,
//		114,
//		105,
//		120,
//		0,
//		171,
//		171,
//		171,
//		3,
//		0,
//		3,
//		0,
//		4,
//		0,
//		4,
//		0,
//		1,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		118,
//		115,
//		95,
//		50,
//		95,
//		48,
//		0,
//		77,
//		105,
//		99,
//		114,
//		111,
//		115,
//		111,
//		102,
//		116,
//		32,
//		40,
//		82,
//		41,
//		32,
//		72,
//		76,
//		83,
//		76,
//		32,
//		83,
//		104,
//		97,
//		100,
//		101,
//		114,
//		32,
//		67,
//		111,
//		109,
//		112,
//		105,
//		108,
//		101,
//		114,
//		32,
//		57,
//		46,
//		50,
//		57,
//		46,
//		57,
//		53,
//		50,
//		46,
//		51,
//		49,
//		49,
//		49,
//		0,
//		81,
//		0,
//		0,
//		5,
//		4,
//		0,
//		15,
//		160,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		31,
//		0,
//		0,
//		2,
//		0,
//		0,
//		0,
//		128,
//		0,
//		0,
//		15,
//		144,
//		9,
//		0,
//		0,
//		3,
//		0,
//		0,
//		1,
//		192,
//		0,
//		0,
//		228,
//		144,
//		0,
//		0,
//		228,
//		160,
//		9,
//		0,
//		0,
//		3,
//		0,
//		0,
//		2,
//		192,
//		0,
//		0,
//		228,
//		144,
//		1,
//		0,
//		228,
//		160,
//		9,
//		0,
//		0,
//		3,
//		0,
//		0,
//		4,
//		192,
//		0,
//		0,
//		228,
//		144,
//		2,
//		0,
//		228,
//		160,
//		9,
//		0,
//		0,
//		3,
//		0,
//		0,
//		8,
//		192,
//		0,
//		0,
//		228,
//		144,
//		3,
//		0,
//		228,
//		160,
//		1,
//		0,
//		0,
//		2,
//		0,
//		0,
//		15,
//		208,
//		4,
//		0,
//		0,
//		160,
//		1,
//		0,
//		0,
//		2,
//		0,
//		0,
//		15,
//		224,
//		0,
//		0,
//		228,
//		144,
//		255,
//		255,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		255,
//		255,
//		255,
//		255,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		220,
//		0,
//		0,
//		0,
//		0,
//		2,
//		88,
//		70,
//		254,
//		255,
//		36,
//		0,
//		67,
//		84,
//		65,
//		66,
//		28,
//		0,
//		0,
//		0,
//		91,
//		0,
//		0,
//		0,
//		0,
//		2,
//		88,
//		70,
//		1,
//		0,
//		0,
//		0,
//		28,
//		0,
//		0,
//		0,
//		0,
//		1,
//		0,
//		32,
//		88,
//		0,
//		0,
//		0,
//		48,
//		0,
//		0,
//		0,
//		2,
//		0,
//		0,
//		0,
//		1,
//		0,
//		0,
//		0,
//		56,
//		0,
//		0,
//		0,
//		72,
//		0,
//		0,
//		0,
//		69,
//		110,
//		97,
//		98,
//		108,
//		101,
//		90,
//		0,
//		0,
//		0,
//		1,
//		0,
//		1,
//		0,
//		1,
//		0,
//		1,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		116,
//		120,
//		0,
//		77,
//		105,
//		99,
//		114,
//		111,
//		115,
//		111,
//		102,
//		116,
//		32,
//		40,
//		82,
//		41,
//		32,
//		72,
//		76,
//		83,
//		76,
//		32,
//		83,
//		104,
//		97,
//		100,
//		101,
//		114,
//		32,
//		67,
//		111,
//		109,
//		112,
//		105,
//		108,
//		101,
//		114,
//		32,
//		57,
//		46,
//		50,
//		57,
//		46,
//		57,
//		53,
//		50,
//		46,
//		51,
//		49,
//		49,
//		49,
//		0,
//		254,
//		255,
//		2,
//		0,
//		67,
//		76,
//		73,
//		84,
//		0,
//		0,
//		0,
//		0,
//		254,
//		255,
//		12,
//		0,
//		70,
//		88,
//		76,
//		67,
//		1,
//		0,
//		0,
//		0,
//		1,
//		0,
//		0,
//		16,
//		1,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		2,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		4,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		0,
//		240,
//		240,
//		240,
//		240,
//		15,
//		15,
//		15,
//		15,
//		255,
//		255,
//		0,
//		0 };

#pragma endregion